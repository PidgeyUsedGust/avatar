{"CHCGASelector(iterations=25, population=40, evaluator=FeatureEvaluator(folds=8, max_depth=8, sample=500))": [{"scores": [0.0, 0.0, 0.0018827369302228483, 0.0, 0.0035385368490961403, 0.038822884811329395, 0.0020268187081436033, 0.0036138235736355075, 0.014301398244057111, 0.0718251295860811, 0.0, 0.07406229440340362, 0.005598185051119657, 0.005538846851491104, 0.002970659190751747, 0.005555911325833086, 0.01598652361793265, 0.0, 0.017446612398475832, 0.03601044588192715, 0.02620585454275878, 0.08274985449423644, 0.0, 0.0009397935251797034, 0.04621699363262631, 0.04748185849835352, 0.0028822583270059717, 0.0021525949583297856, 0.01911986508162009, 0.04867917380071043, 0.0065574298211321215, 0.024547905716700326, 0.011168740080699117, 0.0006521287738421838, 0.005780712417404524, 0.08402383852508365, 0.04723179387740534, 0.0013806621856176865, 0.004322103850407926, 0.04278781124258307, 0.014299200121000551, 0.0015713316949639566, 0.0006512398649102254, 0.012790451754658394, 0.010700213881475048, 0.026702000315119177, 0.0017740664059828844, 0.019715324963193344, 0.004142395265048314, 0.10359159495845073], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_day", "calories_scone", "coffee", "comfort_food_reasons_coded", "cook", "comfort_food_reasons_coded.1", "cuisine", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight"]}, {"scores": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008036207997024385, 0.029610217219195288, 0.0, 0.0019177009117250722, 0.0, 0.001468179559264437, 9.137543322450657e-05, 0.0, 0.003384814808336194, 0.004250552449180195, 0.0050489503517544615, 0.032296585829935213, 0.0, 0.0, 0.000636872719385124, 0.012271515680907865, 0.17301962634360749, 0.00018594840838188675, 0.000990711613289995, 0.0, 0.00962656839188502, 0.0, 0.0, 0.0005167374010624479, 0.0, 0.009129489972029066, 0.0017159523308771284, 0.0, 0.0016100637406361268, 0.01866985932683506, 0.0, 0.0004978235325322138, 0.0, 0.0, 0.0006035754271273563, 0.0008243902322610546, 0.0, 0.005222714598340758, 0.0, 0.0004920672562319264, 0.00043328980694115447, 0.0, 0.010705625709995987, 0.027748373469480395, 0.008170978990609737, 0.06344439036780157, 0.08995112356373411, 0.0013750838509034573, 0.0, 0.0, 0.0002478847637799413, 0.0, 0.00044251019746383913, 0.0, 0.03142937673236057, 0.03159713017341934, 0.0, 0.000944001538214834, 0.01163616768473457, 0.007924285417957285, 0.03106137015345315, 0.0, 0.01596450382610549, 0.01846677241225445, 0.0, 0.006192349832157368, 0.0, 0.0, 0.002427881098609519, 3.500312354058224e-05, 0.0, 0.0, 0.0, 0.0, 0.011057662496435819, 0.0, 0.0005615593658804327, 0.0, 0.0, 0.0, 0.017444125716440204, 0.0, 0.0, 0.0, 0.02581559869483566, 0.003713028156466993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04758562987800978, 0.0, 0.0, 0.0, 7.482556361745632e-05, 0.0, 0.008946925961169938, 0.0, 0.0, 0.0, 0.0, 0.0, 0.018952899005759638, 0.0, 0.0, 0.0, 0.0006320254761533847, 0.0, 0.0, 0.0024326814459495454, 0.0, 0.002469084195133937, 0.00045033875485671234, 0.0, 0.0003289952262081936, 0.002277910573885741, 0.0, 0.0, 0.0, 0.03692312868102636, 0.0020443377407645983, 0.0, 0.0, 0.001759584990773314, 0.03813246536853267, 0.0, 0.0, 0.0, 0.0, 5.175746687927282e-05, 0.0, 0.0016443491464819208, 0.0, 0.021317187453206907, 7.499748178762982e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006899891957907141, 0.0, 0.026997398915372846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00238823105285856, 0.004404391190170909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001233328535386277, 0.0008243454749712392, 0.0, 0.0, 1.64026063561989e-18, 0.0, 0.0, 0.0, 0.0, 0.003844160416019907, 0.0, 0.0, 0.0, 0.0, 0.0, 2.060374127126526e-18, 0.0, 0.0, 0.0, 0.0, 0.007185467438702675, 0.0, 0.0, 0.02542498469192303], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_scone", "coffee", "cook", "comfort_food_reasons_coded.1", "cuisine", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight", "Split(,)(comfort_food_reasons)_0", "Split( )(comfort_food_reasons)_0", "Split( )(diet_current)_0", "Split( )(diet_current)_1", "Split( )(eating_changes)_0", "Split( )(fav_cuisine)_0", "Split( -)(fav_cuisine)_0", "Split(/)(fav_cuisine)_0", "Split( )(food_childhood)_0", "Split( )(ideal_diet)_0", "Split( )(ideal_diet)_1", "Split( )(meals_dinner_friend)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(weight)_0", "ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0", "ExtractWord([and, eat, healthy])(diet_current)_0", "ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0", "ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(fav_cuisine)_fav_cuisine", "OneHot()(calories_chicken)_265", "OneHot()(calories_chicken)_430", "OneHot()(calories_chicken)_610", "OneHot()(calories_chicken)_720", "OneHot()(comfort_food_reasons_coded.1)_1", "OneHot()(comfort_food_reasons_coded.1)_2", "OneHot()(comfort_food_reasons_coded.1)_3", "OneHot()(comfort_food_reasons_coded.1)_4", "OneHot()(comfort_food_reasons_coded.1)_5", "OneHot()(comfort_food_reasons_coded.1)_6", "OneHot()(comfort_food_reasons_coded.1)_7", "OneHot()(comfort_food_reasons_coded.1)_9", "OneHot()(diet_current_coded)_1", "OneHot()(diet_current_coded)_2", "OneHot()(diet_current_coded)_3", "OneHot()(diet_current_coded)_4", "OneHot()(eating_changes_coded)_1", "OneHot()(eating_changes_coded)_2", "OneHot()(eating_changes_coded)_3", "OneHot()(eating_changes_coded)_4", "OneHot()(eating_changes_coded1)_2", "OneHot()(eating_changes_coded1)_3", "OneHot()(eating_changes_coded1)_5", "OneHot()(eating_changes_coded1)_7", "OneHot()(eating_changes_coded1)_8", "OneHot()(eating_changes_coded1)_10", "OneHot()(eating_changes_coded1)_11", "OneHot()(eating_changes_coded1)_12", "OneHot()(eating_out)_1", "OneHot()(eating_out)_2", "OneHot()(eating_out)_3", "OneHot()(eating_out)_4", "OneHot()(eating_out)_5", "OneHot()(ethnic_food)_1", "OneHot()(ethnic_food)_2", "OneHot()(ethnic_food)_3", "OneHot()(ethnic_food)_4", "OneHot()(ethnic_food)_5", "OneHot()(fav_cuisine_coded)_0", "OneHot()(fav_cuisine_coded)_1", "OneHot()(fav_cuisine_coded)_2", "OneHot()(fav_cuisine_coded)_3", "OneHot()(fav_cuisine_coded)_4", "OneHot()(fav_cuisine_coded)_5", "OneHot()(fav_cuisine_coded)_8", "OneHot()(fruit_day)_2", "OneHot()(fruit_day)_3", "OneHot()(fruit_day)_4", "OneHot()(fruit_day)_5", "OneHot()(grade_level)_1", "OneHot()(grade_level)_2", "OneHot()(grade_level)_3", "OneHot()(grade_level)_4", "OneHot()(greek_food)_1", "OneHot()(greek_food)_2", "OneHot()(greek_food)_3", "OneHot()(greek_food)_4", "OneHot()(greek_food)_5", "OneHot()(healthy_feeling)_1", "OneHot()(healthy_feeling)_2", "OneHot()(healthy_feeling)_3", "OneHot()(healthy_feeling)_4", "OneHot()(healthy_feeling)_5", "OneHot()(healthy_feeling)_6", "OneHot()(healthy_feeling)_7", "OneHot()(healthy_feeling)_8", "OneHot()(healthy_feeling)_9", "OneHot()(healthy_feeling)_10", "OneHot()(ideal_diet_coded)_1", "OneHot()(ideal_diet_coded)_2", "OneHot()(ideal_diet_coded)_3", "OneHot()(ideal_diet_coded)_4", "OneHot()(ideal_diet_coded)_5", "OneHot()(ideal_diet_coded)_6", "OneHot()(ideal_diet_coded)_7", "OneHot()(ideal_diet_coded)_8", "OneHot()(income)_1", "OneHot()(income)_2", "OneHot()(income)_3", "OneHot()(income)_4", "OneHot()(income)_5", "OneHot()(income)_6", "OneHot()(indian_food)_1", "OneHot()(indian_food)_2", "OneHot()(indian_food)_3", "OneHot()(indian_food)_4", "OneHot()(indian_food)_5", "OneHot()(italian_food)_3", "OneHot()(italian_food)_4", "OneHot()(italian_food)_5", "OneHot()(life_rewarding)_1", "OneHot()(life_rewarding)_2", "OneHot()(life_rewarding)_3", "OneHot()(life_rewarding)_4", "OneHot()(life_rewarding)_5", "OneHot()(life_rewarding)_6", "OneHot()(life_rewarding)_7", "OneHot()(life_rewarding)_8", "OneHot()(life_rewarding)_9", "OneHot()(life_rewarding)_10", "OneHot()(nutritional_check)_1", "OneHot()(nutritional_check)_2", "OneHot()(nutritional_check)_3", "OneHot()(nutritional_check)_4", "OneHot()(nutritional_check)_5", "OneHot()(parents_cook)_1", "OneHot()(parents_cook)_2", "OneHot()(parents_cook)_3", "OneHot()(pay_meal_out)_2", "OneHot()(pay_meal_out)_3", "OneHot()(pay_meal_out)_4", "OneHot()(pay_meal_out)_5", "OneHot()(pay_meal_out)_6", "OneHot()(thai_food)_1", "OneHot()(thai_food)_2", "OneHot()(thai_food)_3", "OneHot()(thai_food)_4", "OneHot()(thai_food)_5", "OneHot()(turkey_calories)_345", "OneHot()(turkey_calories)_500", "OneHot()(turkey_calories)_690", "OneHot()(turkey_calories)_850", "OneHot()(veggies_day)_2", "OneHot()(veggies_day)_3", "OneHot()(veggies_day)_4", "OneHot()(veggies_day)_5", "OneHot()(waffle_calories)_575", "OneHot()(waffle_calories)_760", "OneHot()(waffle_calories)_900", "OneHot()(waffle_calories)_1315", "NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "NaN(I'm not answering this. )(weight)_weight", "WordToNumber()(weight)_weight"]}, {"scores": [0.0, 0.0, 0.0, 0.0, 8.546992205581768e-05, 0.0, 1.1535225940229283e-18, 0.0035330805362472303, 0.007535390067955455, 0.000493849609411375, 0.0, 0.0006009027435684954, 0.0007661956312370826, 0.0, 0.0, 0.007643917411042878, 0.0013769706072511365, 0.0, 0.007395962514227686, 2.038353178193127e-18, 0.0003241484965156554, 6.868675462801597e-05, 0.06211579168768056, 0.0034225125412465727, 0.0, 0.0, 0.0, 0.0, 0.0011615326513869614, 0.0, 0.03746986463681674, 0.06627082929058105, 0.009879313651746893, 0.0, 0.00025034047580388776, 0.0020509692775265934, 6.804573494819584e-05, 0.0, 0.006282299589439288, 0.0, 0.0011446463800055737, 0.03474773096592297, 5.014337599435918e-05, 0.0, 0.0, 0.0, 0.0, 0.019569006881337336, 0.0026450647987775514, 0.0, 0.0, 0.005132851358270761, 0.0, 0.0003011165054755186, 0.00023885684729855165, 0.0, 0.001997669847881693, 0.009499950796843409, 0.0012490651959285348, 0.0, 0.0, 0.0, 0.0035309415391537526, 0.0, 0.002187453664668089, 0.0, 0.010689192946105675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00016450776599441207, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004283890588480407, 3.289568674199902e-05, 0.0, 0.0, 0.0576536740642387, 0.0003310264012815765, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0034679607265762484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011397547724246312, 6.031832679153112e-05, 0.0, 0.0, 0.0002823947458782782, 0.0, 0.0027426147845414257, 0.0013233408835245574, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9341881931969603e-05, 0.0, 0.0, 0.0, 0.0, 0.010029588544671415, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012573790528332548, 0.0, 0.0, 0.0, 0.0, 0.0011908051615412759, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012030141732545028, 0.0009326456085339581, 0.0, 0.0, 0.0, 0.0, 0.0004980421893425983, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.292018673463334e-05, 0.0, 0.005427084889410465, 0.00026310252550421927, 0.0, 0.0, 0.0, 0.022998789002814282, 0.0, 0.0, 0.0006219415015121909, 0.0, 0.0, 0.002342837046950949, 5.501092493970075e-18, 0.006652313294610617, 0.002463582267514541, 0.0, 0.009431950904721355, 0.015887490501967944, 0.0, 0.0006360502970858064, 0.0, 0.08684007218481056, 0.022509684458494862, 0.04122709435442042, 0.0, 0.0, 0.0, 0.0, 0.00011717514941688295, 0.0006463312804585649, 6.023049101066161e-05, 0.0, 0.0, 0.0016305281500383732, 0.0, 0.0, 0.0, 0.027907410735526838, 0.0, 0.0, 4.339388239331337e-20, 0.0008732322978113302, 0.017405792882034553, 0.004304373159520255, 0.00106645361284074, 0.002626040342119534, 0.026306648314308945, 0.0, 0.0, 0.0009188378968183829, 0.0005264316090346113, 0.009327334247096978, 0.0, 0.0, 0.13575145457007712, 0.0, 0.0, 0.00027931572191002956, 0.0, 0.013774156548448319, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007926230101275702, 0.0, 3.262697924309276e-20, 0.0018504330872245402, 8.497554143624956e-05, 0.0007491920634490908, 0.006917659637567607, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025067703440147818, 0.0014802161316251265, 0.0, 0.0, 0.0, 0.0002351614195345595, 0.0011313036084319812, 0.0, 0.02260198309210933, 0.0, 0.0, 0.0018476527741275411, 0.0, 0.0015997282204919, 0.0, 0.0198700118728697, 0.0, 0.0, 0.0, 0.0, 0.008467475222633566, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000809033710580635, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003151913037684751, 0.0, 7.650278414167802e-05, 9.774010317404398e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0021578916501313293, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009715188931770175, 0.0, 0.0, 0.004374463874272063, 0.0, 0.0, 0.0, 0.0, 0.0021085691712561918, 0.010764211738601124, 0.003000978141948195, 0.0, 0.0, 0.021745273480074198, 0.0, 0.0007546698948245619, 0.0, 0.001602488821598859, 0.0, 0.0, 0.003081228121718328], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_scone", "coffee", "cook", "comfort_food_reasons_coded.1", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight", "Split(,)(comfort_food_reasons)_0", "Split( )(comfort_food_reasons)_0", "Split( )(diet_current)_0", "Split( )(diet_current)_1", "Split( )(eating_changes)_0", "Split( )(fav_cuisine)_0", "Split( -)(fav_cuisine)_0", "Split(/)(fav_cuisine)_0", "Split( )(food_childhood)_0", "Split( )(ideal_diet)_0", "Split( )(ideal_diet)_1", "Split( )(meals_dinner_friend)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(weight)_0", "ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ExtractWord([and, eat, healthy])(diet_current)_0", "ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(fav_cuisine)_fav_cuisine", "OneHot()(calories_chicken)_265", "OneHot()(calories_chicken)_430", "OneHot()(calories_chicken)_610", "OneHot()(calories_chicken)_720", "OneHot()(comfort_food_reasons_coded.1)_1", "OneHot()(comfort_food_reasons_coded.1)_2", "OneHot()(comfort_food_reasons_coded.1)_3", "OneHot()(comfort_food_reasons_coded.1)_4", "OneHot()(comfort_food_reasons_coded.1)_5", "OneHot()(comfort_food_reasons_coded.1)_6", "OneHot()(comfort_food_reasons_coded.1)_7", "OneHot()(comfort_food_reasons_coded.1)_9", "OneHot()(diet_current_coded)_1", "OneHot()(diet_current_coded)_2", "OneHot()(diet_current_coded)_3", "OneHot()(diet_current_coded)_4", "OneHot()(eating_changes_coded)_1", "OneHot()(eating_changes_coded)_2", "OneHot()(eating_changes_coded)_3", "OneHot()(eating_changes_coded)_4", "OneHot()(eating_changes_coded1)_2", "OneHot()(eating_changes_coded1)_3", "OneHot()(eating_changes_coded1)_5", "OneHot()(eating_changes_coded1)_7", "OneHot()(eating_changes_coded1)_8", "OneHot()(eating_changes_coded1)_10", "OneHot()(eating_changes_coded1)_11", "OneHot()(eating_changes_coded1)_12", "OneHot()(eating_out)_1", "OneHot()(eating_out)_2", "OneHot()(eating_out)_3", "OneHot()(eating_out)_4", "OneHot()(eating_out)_5", "OneHot()(ethnic_food)_1", "OneHot()(ethnic_food)_2", "OneHot()(ethnic_food)_3", "OneHot()(ethnic_food)_4", "OneHot()(ethnic_food)_5", "OneHot()(fav_cuisine_coded)_0", "OneHot()(fav_cuisine_coded)_1", "OneHot()(fav_cuisine_coded)_2", "OneHot()(fav_cuisine_coded)_3", "OneHot()(fav_cuisine_coded)_4", "OneHot()(fav_cuisine_coded)_5", "OneHot()(fav_cuisine_coded)_8", "OneHot()(fruit_day)_2", "OneHot()(fruit_day)_3", "OneHot()(fruit_day)_4", "OneHot()(fruit_day)_5", "OneHot()(grade_level)_1", "OneHot()(grade_level)_2", "OneHot()(grade_level)_3", "OneHot()(grade_level)_4", "OneHot()(greek_food)_1", "OneHot()(greek_food)_2", "OneHot()(greek_food)_3", "OneHot()(greek_food)_4", "OneHot()(greek_food)_5", "OneHot()(healthy_feeling)_1", "OneHot()(healthy_feeling)_2", "OneHot()(healthy_feeling)_3", "OneHot()(healthy_feeling)_4", "OneHot()(healthy_feeling)_5", "OneHot()(healthy_feeling)_6", "OneHot()(healthy_feeling)_7", "OneHot()(healthy_feeling)_8", "OneHot()(healthy_feeling)_9", "OneHot()(healthy_feeling)_10", "OneHot()(ideal_diet_coded)_1", "OneHot()(ideal_diet_coded)_2", "OneHot()(ideal_diet_coded)_3", "OneHot()(ideal_diet_coded)_4", "OneHot()(ideal_diet_coded)_5", "OneHot()(ideal_diet_coded)_6", "OneHot()(ideal_diet_coded)_7", "OneHot()(ideal_diet_coded)_8", "OneHot()(income)_1", "OneHot()(income)_2", "OneHot()(income)_3", "OneHot()(income)_4", "OneHot()(income)_5", "OneHot()(income)_6", "OneHot()(indian_food)_1", "OneHot()(indian_food)_2", "OneHot()(indian_food)_3", "OneHot()(indian_food)_4", "OneHot()(indian_food)_5", "OneHot()(italian_food)_3", "OneHot()(italian_food)_4", "OneHot()(italian_food)_5", "OneHot()(life_rewarding)_1", "OneHot()(life_rewarding)_2", "OneHot()(life_rewarding)_3", "OneHot()(life_rewarding)_4", "OneHot()(life_rewarding)_5", "OneHot()(life_rewarding)_6", "OneHot()(life_rewarding)_7", "OneHot()(life_rewarding)_8", "OneHot()(life_rewarding)_9", "OneHot()(life_rewarding)_10", "OneHot()(nutritional_check)_1", "OneHot()(nutritional_check)_2", "OneHot()(nutritional_check)_3", "OneHot()(nutritional_check)_4", "OneHot()(nutritional_check)_5", "OneHot()(parents_cook)_1", "OneHot()(parents_cook)_2", "OneHot()(parents_cook)_3", "OneHot()(pay_meal_out)_2", "OneHot()(pay_meal_out)_3", "OneHot()(pay_meal_out)_4", "OneHot()(pay_meal_out)_5", "OneHot()(pay_meal_out)_6", "OneHot()(thai_food)_1", "OneHot()(thai_food)_2", "OneHot()(thai_food)_3", "OneHot()(thai_food)_4", "OneHot()(thai_food)_5", "OneHot()(turkey_calories)_345", "OneHot()(turkey_calories)_500", "OneHot()(turkey_calories)_690", "OneHot()(turkey_calories)_850", "OneHot()(veggies_day)_2", "OneHot()(veggies_day)_3", "OneHot()(veggies_day)_4", "OneHot()(veggies_day)_5", "OneHot()(waffle_calories)_575", "OneHot()(waffle_calories)_760", "OneHot()(waffle_calories)_900", "OneHot()(waffle_calories)_1315", "NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "NaN(I'm not answering this. )(weight)_weight", "WordToNumber()(weight)_weight", "Split( )(Split(,)(comfort_food)_0)_0", "Split( )(Split(-)(comfort_food)_0)_0", "Split(,)(Split( )(comfort_food)_1)_0", "Split(,)(Split( )(comfort_food)_2)_0", "Split( )(Split(,)(comfort_food_reasons)_0)_0", "Split(. )(Split(,)(comfort_food_reasons)_0)_0", "Split(, )(Split(  )(comfort_food_reasons)_0)_0", "Split( )(Split(,)(diet_current)_0)_0", "Split( )(Split(,)(diet_current)_0)_1", "Split( )(Split(. )(diet_current)_0)_1", "Split(.)(Split( )(diet_current)_1)_0", "Split(,)(Split( )(diet_current)_1)_0", "Split( )(Split(,)(eating_changes)_0)_0", "Split( )(Split(')(eating_changes)_0)_0", "Split(/)(Split( )(fav_cuisine)_0)_0", "Split(/)(Split( -)(fav_cuisine)_0)_0", "Split( )(Split(,)(food_childhood)_0)_0", "Split(,)(Split( )(healthy_meal)_2)_0", "Split( )(Split(,)(ideal_diet)_0)_0", "Split( )(Split(,)(ideal_diet)_0)_1", "Split( )(Split(. )(ideal_diet)_0)_1", "Split( )(Split(/)(ideal_diet)_0)_1", "Split(.)(Split( )(ideal_diet)_1)_0", "Split(,)(Split( )(ideal_diet)_1)_0", "Split(,)(Split( )(meals_dinner_friend)_0)_0", "Split(,)(Split( )(meals_dinner_friend)_1)_0", "Split( )(Split(, )(meals_dinner_friend)_0)_0", "Split(,)(Lowercase()(comfort_food)_comfort_food)_0", "Split( )(Lowercase()(comfort_food)_comfort_food)_0", "Split( )(Lowercase()(comfort_food)_comfort_food)_1", "Split( )(Lowercase()(comfort_food)_comfort_food)_2", "Split(,)(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "Split( )(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "Split( )(Lowercase()(diet_current)_diet_current)_0", "Split( )(Lowercase()(eating_changes)_eating_changes)_0", "Split( )(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split( -)(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split(/)(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split( )(Lowercase()(food_childhood)_food_childhood)_0", "Split( )(Lowercase()(ideal_diet)_ideal_diet)_0", "Split( )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_1", "Split(,)(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split(, )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(sometimes choosing to eat fast food instead of cooking simply for convenience)(eating_changes)_eating_changes)_0", "Split( )(NaN(not as healthy because healthy food goes bad quickly and it is expensive)(eating_changes)_eating_changes)_0", "Split( )(NaN(Freshman year I did not watch my diet at all and really let myself go. I ate pizza and fries for almost every meal. Summer following freshman year I knew I needed to stop doing that so I cut out as many refined carbs as I could and try to eat healthier portions.)(eating_changes)_eating_changes)_0", "Split( )(NaN(Food is not as healthy. )(eating_changes)_eating_changes)_0", "Split( )(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split( -)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split(/)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split( )(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split( -)(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split(/)(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split( )(NaN(chicken and rice with veggies, pasta, some kind of healthy recipe)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(Anything they'd want. I'd ask them before hand what they want to eat and it depends on which type of friend is coming.)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(Some kind of pasta, a chicken dish, some kind of salad)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(any Chinese food, pasta, burgers)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(ModeImputation()(type_sports)_type_sports)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(weight)_0)_0", "ExtractWord([Boredom, Sadness, Stress, bored, boredom, comfort, or, sadness])(Split(. )(comfort_food_reasons)_0)_0", "ExtractWord([Boredom, Sadness, Stress, bored, boredom, comfort, i, sadness])(Split(')(comfort_food_reasons)_0)_0", "ExtractWord([and, diet, eat, healthy])(Split(.  )(diet_current)_0)_0", "ExtractWord([I, and, breakfast, diet, healthy, the])(Split(. )(diet_current)_0)_0", "ExtractWord([and, diet, eat, the])(Split(')(diet_current)_0)_0", "ExtractWord([Chicken, Mac, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(Split(&)(food_childhood)_0)_0", "ExtractWord([Chicken, and, food, of, vegetable, vegetables])(Split(&)(healthy_meal)_0)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(Split(()(healthy_meal)_0)_0", "ExtractWord([I, a, and, diet, healthy, of])(Split(,)(ideal_diet)_0)_0", "ExtractWord([a, and, diet, eat, healthy])(Split(-)(ideal_diet)_0)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(Split(')(meals_dinner_friend)_0)_0", "ExtractWord([Chicken, Meat, Pasta, Pizza, Steak, chicken, pasta, steak])(Split(. )(meals_dinner_friend)_0)_0", "ExtractWord([and, candy, chips, cookies, ice, pasta, pizza])(Lowercase()(comfort_food)_comfort_food)_0", "ExtractWord([a, boredom, i, sadness, stress])(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "ExtractWord([and, diet, i, very])(Lowercase()(diet_current)_diet_current)_0", "ExtractWord([eating, food, i, less, more])(Lowercase()(eating_changes)_eating_changes)_0", "ExtractWord([and, chicken, pasta, pizza, spaghetti, steak])(Lowercase()(food_childhood)_food_childhood)_0", "ExtractWord([and, chicken, food, meat, of, protein])(Lowercase()(healthy_meal)_healthy_meal)_0", "ExtractWord([a, and, diet, healthy, i])(Lowercase()(ideal_diet)_ideal_diet)_0", "ExtractWord([chicken, meat, pasta, pizza, steak])(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "ExtractWord([I, Less, More, eating, food, healthier, less, to])(ModeImputation()(eating_changes)_eating_changes)_0", "Lowercase()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "Lowercase()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "Lowercase()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "Lowercase()(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "Lowercase()(ModeImputation()(type_sports)_type_sports)_ModeImputation()(type_sports)_type_sports", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_Chocolate", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_Pizza", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_and", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cake", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_chips", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cookies", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cream", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_pizza", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Boredom", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_I", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Sadness", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Stress", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_bored", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_boredom", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_sadness", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_and", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_eat", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_healthy", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_I", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_Less", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_More", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_eat", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_food", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_less", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_to", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Spaghetti", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Steak", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_and", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_steak", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_and", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_food", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_of", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_vegetable", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_veggies", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_I", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_a", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_diet", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_healthy", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_and", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_steak", "NaN(Not)(Split( )(diet_current)_0)_Split( )(diet_current)_0", "NaN(Not)(Split( )(diet_current)_1)_Split( )(diet_current)_1", "NaN(not)(Split( )(eating_changes)_0)_Split( )(eating_changes)_0", "NaN(Any type of Colombian cuisine)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Not sure, 240)(NaN(I'm not answering this. )(weight)_weight)_NaN(I'm not answering this. )(weight)_weight", "ModeImputation()(Split( )(eating_changes)_1)_Split( )(eating_changes)_1", "ModeImputation()(Split( )(eating_changes)_2)_Split( )(eating_changes)_2", "ModeImputation()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ModeImputation()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0", "ModeImputation()(ExtractWord([and, eat, healthy])(diet_current)_0)_ExtractWord([and, eat, healthy])(diet_current)_0", "ModeImputation()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0", "ModeImputation()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ModeImputation()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ModeImputation()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "ModeImputation()(NaN(I'm not answering this. )(weight)_weight)_NaN(I'm not answering this. )(weight)_weight"]}]}