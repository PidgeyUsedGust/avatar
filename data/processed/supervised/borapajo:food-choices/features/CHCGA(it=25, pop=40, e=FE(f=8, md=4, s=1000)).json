{"CHCGASelector(iterations=25, population=40, evaluator=FeatureEvaluator(folds=8, max_depth=4, sample=1000))": [{"scores": [0.0, 0.0, 0.0024673182900675265, 0.002513545234215926, 0.0012216654482043623, 0.04152214668818068, 0.0, 0.027161557595478204, 0.0, 0.0, 0.002835060492444529, 0.0351828654055529, 0.0001690494381076097, 0.004042640208987643, 0.060458147422253465, 0.0, 2.8183988514404154e-06, 0.0, 0.0009734178129023698, 0.010313706029205326, 0.02663124538950508, 0.004446476203064348, 0.006617725794204194, 0.0011493299850776288, 0.019654455366114463, 0.13536517780850477, 0.0, 0.02789057270697555, 0.003962658871912706, 0.00954586914858456, 0.005677341912622698, 0.0, 0.006061372188357179, 0.0, 0.0004176303253841265, 0.15497717062066613, 0.014614939150627554, 0.08084380018957928, 0.003047978331672686, 0.0018373208052185287, 0.044065325339230965, 0.0018743917118697094, 0.0, 0.008182333209516989, 0.02382187298211731, 0.0026193001817118506, 0.01574843533606789, 0.00033266556881703276, 0.035283181427847254, 0.17646749098029757], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_day", "calories_scone", "coffee", "comfort_food_reasons_coded", "cook", "comfort_food_reasons_coded.1", "cuisine", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight"]}, {"scores": [0.0, 0.001295437523796955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010992156501667519, 0.0, 0.0011005168566781242, 0.0, 0.0069624663628316125, 0.017027943536574833, 0.0005638796624189412, 0.0, 0.0, 0.0, 0.13093230163235564, 0.06630934007414059, 0.04487212821184191, 0.0011898777487807863, 0.0, 0.025121593900923857, 0.019109378388912874, 0.0, 0.0, 0.0, 0.0011573153642370352, 0.0, 0.08519893343499922, 0.006393730890507207, 0.002179796491781869, 0.000214425850390396, 0.0, 0.0010089622664957503, 0.016956419283276358, 0.0011114821134353618, 0.002016314647512362, 0.0, 0.0, 0.0, 0.0, 0.004109571391022669, 0.003959585226668907, 0.0, 0.0, 0.0, 0.003403221802362093, 0.0007679018824762, 0.0, 0.0, 0.01155721473883896, 0.016256790473993418, 0.011442540341077145, 0.0010944332212400585, 0.011806897305407776, 0.035134012843987136, 0.0, 0.08835213480673064, 0.004267276520243571, 0.0031725256955122635, 0.004832174653464685, 0.00012469362016064766, 0.009659607988724159, 0.00017907730472029834, 0.0007734320239241612, 0.0, 0.116170115683044, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001681090590592166, 0.0, 0.001957881603350121, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0029062367742686062, 0.001328664828601309, 0.001846640197987424, 0.0, 0.0, 0.0002103894425251274, 0.0, 0.0, 0.0, 0.0, 0.0005177634388433834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0038971495453590343, 0.0, 0.0, 0.0, 0.0, 0.00044972961666548815, 0.0, 0.0, 0.0, 0.01200854664974785, 0.0, 0.0, 0.023330926753394973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010031885913643549, 0.0, 0.0, 0.0, 0.0, 0.008742271300464339, 0.0, 0.0011955186175870536, 0.010016457522574448, 0.0, 0.0, 0.0009853147989233035, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001154462959044419, 9.144680209210616e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.017400511209714992, 0.0, 0.0, 0.0, 0.00017643791724258594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.020149707102331618, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.823267846997915e-05, 0.0, 0.004408276085954459, 0.0, 0.0006131922101183902, 0.0007866392571669842, 0.0, 0.002241685851865173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00021859191317399537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.507879067193966e-05, 0.0007746436014135167, 0.0, 0.0, 0.00018340887713534206, 0.0, 0.040167551563041276, 0.06705427141585776, 0.00034793174001391565, 0.005036089099656251], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_scone", "coffee", "cook", "comfort_food_reasons_coded.1", "cuisine", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight", "Split(,)(comfort_food_reasons)_0", "Split( )(comfort_food_reasons)_0", "Split( )(diet_current)_0", "Split( )(diet_current)_1", "Split( )(eating_changes)_0", "Split( )(fav_cuisine)_0", "Split( -)(fav_cuisine)_0", "Split(/)(fav_cuisine)_0", "Split( )(food_childhood)_0", "Split( )(ideal_diet)_0", "Split( )(ideal_diet)_1", "Split( )(meals_dinner_friend)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(weight)_0", "ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0", "ExtractWord([and, eat, healthy])(diet_current)_0", "ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0", "ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(fav_cuisine)_fav_cuisine", "OneHot()(calories_chicken)_265", "OneHot()(calories_chicken)_430", "OneHot()(calories_chicken)_610", "OneHot()(calories_chicken)_720", "OneHot()(comfort_food_reasons_coded.1)_1", "OneHot()(comfort_food_reasons_coded.1)_2", "OneHot()(comfort_food_reasons_coded.1)_3", "OneHot()(comfort_food_reasons_coded.1)_4", "OneHot()(comfort_food_reasons_coded.1)_5", "OneHot()(comfort_food_reasons_coded.1)_6", "OneHot()(comfort_food_reasons_coded.1)_7", "OneHot()(comfort_food_reasons_coded.1)_9", "OneHot()(diet_current_coded)_1", "OneHot()(diet_current_coded)_2", "OneHot()(diet_current_coded)_3", "OneHot()(diet_current_coded)_4", "OneHot()(eating_changes_coded)_1", "OneHot()(eating_changes_coded)_2", "OneHot()(eating_changes_coded)_3", "OneHot()(eating_changes_coded)_4", "OneHot()(eating_changes_coded1)_2", "OneHot()(eating_changes_coded1)_3", "OneHot()(eating_changes_coded1)_5", "OneHot()(eating_changes_coded1)_7", "OneHot()(eating_changes_coded1)_8", "OneHot()(eating_changes_coded1)_10", "OneHot()(eating_changes_coded1)_11", "OneHot()(eating_changes_coded1)_12", "OneHot()(eating_out)_1", "OneHot()(eating_out)_2", "OneHot()(eating_out)_3", "OneHot()(eating_out)_4", "OneHot()(eating_out)_5", "OneHot()(ethnic_food)_1", "OneHot()(ethnic_food)_2", "OneHot()(ethnic_food)_3", "OneHot()(ethnic_food)_4", "OneHot()(ethnic_food)_5", "OneHot()(fav_cuisine_coded)_0", "OneHot()(fav_cuisine_coded)_1", "OneHot()(fav_cuisine_coded)_2", "OneHot()(fav_cuisine_coded)_3", "OneHot()(fav_cuisine_coded)_4", "OneHot()(fav_cuisine_coded)_5", "OneHot()(fav_cuisine_coded)_8", "OneHot()(fruit_day)_2", "OneHot()(fruit_day)_3", "OneHot()(fruit_day)_4", "OneHot()(fruit_day)_5", "OneHot()(grade_level)_1", "OneHot()(grade_level)_2", "OneHot()(grade_level)_3", "OneHot()(grade_level)_4", "OneHot()(greek_food)_1", "OneHot()(greek_food)_2", "OneHot()(greek_food)_3", "OneHot()(greek_food)_4", "OneHot()(greek_food)_5", "OneHot()(healthy_feeling)_1", "OneHot()(healthy_feeling)_2", "OneHot()(healthy_feeling)_3", "OneHot()(healthy_feeling)_4", "OneHot()(healthy_feeling)_5", "OneHot()(healthy_feeling)_6", "OneHot()(healthy_feeling)_7", "OneHot()(healthy_feeling)_8", "OneHot()(healthy_feeling)_9", "OneHot()(healthy_feeling)_10", "OneHot()(ideal_diet_coded)_1", "OneHot()(ideal_diet_coded)_2", "OneHot()(ideal_diet_coded)_3", "OneHot()(ideal_diet_coded)_4", "OneHot()(ideal_diet_coded)_5", "OneHot()(ideal_diet_coded)_6", "OneHot()(ideal_diet_coded)_7", "OneHot()(ideal_diet_coded)_8", "OneHot()(income)_1", "OneHot()(income)_2", "OneHot()(income)_3", "OneHot()(income)_4", "OneHot()(income)_5", "OneHot()(income)_6", "OneHot()(indian_food)_1", "OneHot()(indian_food)_2", "OneHot()(indian_food)_3", "OneHot()(indian_food)_4", "OneHot()(indian_food)_5", "OneHot()(italian_food)_3", "OneHot()(italian_food)_4", "OneHot()(italian_food)_5", "OneHot()(life_rewarding)_1", "OneHot()(life_rewarding)_2", "OneHot()(life_rewarding)_3", "OneHot()(life_rewarding)_4", "OneHot()(life_rewarding)_5", "OneHot()(life_rewarding)_6", "OneHot()(life_rewarding)_7", "OneHot()(life_rewarding)_8", "OneHot()(life_rewarding)_9", "OneHot()(life_rewarding)_10", "OneHot()(nutritional_check)_1", "OneHot()(nutritional_check)_2", "OneHot()(nutritional_check)_3", "OneHot()(nutritional_check)_4", "OneHot()(nutritional_check)_5", "OneHot()(parents_cook)_1", "OneHot()(parents_cook)_2", "OneHot()(parents_cook)_3", "OneHot()(pay_meal_out)_2", "OneHot()(pay_meal_out)_3", "OneHot()(pay_meal_out)_4", "OneHot()(pay_meal_out)_5", "OneHot()(pay_meal_out)_6", "OneHot()(thai_food)_1", "OneHot()(thai_food)_2", "OneHot()(thai_food)_3", "OneHot()(thai_food)_4", "OneHot()(thai_food)_5", "OneHot()(turkey_calories)_345", "OneHot()(turkey_calories)_500", "OneHot()(turkey_calories)_690", "OneHot()(turkey_calories)_850", "OneHot()(veggies_day)_2", "OneHot()(veggies_day)_3", "OneHot()(veggies_day)_4", "OneHot()(veggies_day)_5", "OneHot()(waffle_calories)_575", "OneHot()(waffle_calories)_760", "OneHot()(waffle_calories)_900", "OneHot()(waffle_calories)_1315", "NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "NaN(I'm not answering this. )(weight)_weight", "WordToNumber()(weight)_weight"]}, {"scores": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05494213968848053, 0.0, 0.0, 0.0097981533211646, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00028803667187566787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08589587105060985, 0.0, 0.0, 0.004137169665754103, 0.0, 0.09416814239637081, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00043948773811897644, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.27041661339959483, 0.0, 0.0, 0.0024082484346156685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03254252135848934, 0.0003902668019362153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007693605126140516, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007832615913200966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005149502398933201, 0.004366168285664201, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004150618369045302, 0.0, 0.005663594732696262, 0.018732006580129894, 0.02209826390468787, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.14277662461981383, 0.0, 0.0, 0.0, 0.01858324856552321, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0049711597222860185, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0034753658621013263, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0009263315731274658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13361561111907114, 0.02664322322219083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003538413194851889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007844280676977112, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03343696022007485, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "columns": ["GPA", "Gender", "breakfast", "calories_chicken", "calories_scone", "coffee", "cook", "comfort_food_reasons_coded.1", "diet_current_coded", "drink", "eating_changes_coded", "eating_changes_coded1", "eating_out", "employment", "ethnic_food", "exercise", "father_education", "fav_cuisine", "fav_cuisine_coded", "fav_food", "fries", "fruit_day", "grade_level", "greek_food", "healthy_feeling", "ideal_diet_coded", "income", "indian_food", "italian_food", "life_rewarding", "marital_status", "mother_education", "nutritional_check", "on_off_campus", "parents_cook", "pay_meal_out", "persian_food", "self_perception_weight", "soup", "sports", "thai_food", "tortilla_calories", "turkey_calories", "veggies_day", "vitamins", "waffle_calories", "weight", "Split(,)(comfort_food_reasons)_0", "Split( )(comfort_food_reasons)_0", "Split( )(diet_current)_0", "Split( )(diet_current)_1", "Split( )(eating_changes)_0", "Split( )(fav_cuisine)_0", "Split( -)(fav_cuisine)_0", "Split(/)(fav_cuisine)_0", "Split( )(food_childhood)_0", "Split( )(ideal_diet)_0", "Split( )(ideal_diet)_1", "Split( )(meals_dinner_friend)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(weight)_0", "ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ExtractWord([and, eat, healthy])(diet_current)_0", "ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(fav_cuisine)_fav_cuisine", "OneHot()(calories_chicken)_265", "OneHot()(calories_chicken)_430", "OneHot()(calories_chicken)_610", "OneHot()(calories_chicken)_720", "OneHot()(comfort_food_reasons_coded.1)_1", "OneHot()(comfort_food_reasons_coded.1)_2", "OneHot()(comfort_food_reasons_coded.1)_3", "OneHot()(comfort_food_reasons_coded.1)_4", "OneHot()(comfort_food_reasons_coded.1)_5", "OneHot()(comfort_food_reasons_coded.1)_6", "OneHot()(comfort_food_reasons_coded.1)_7", "OneHot()(comfort_food_reasons_coded.1)_9", "OneHot()(diet_current_coded)_1", "OneHot()(diet_current_coded)_2", "OneHot()(diet_current_coded)_3", "OneHot()(diet_current_coded)_4", "OneHot()(eating_changes_coded)_1", "OneHot()(eating_changes_coded)_2", "OneHot()(eating_changes_coded)_3", "OneHot()(eating_changes_coded)_4", "OneHot()(eating_changes_coded1)_2", "OneHot()(eating_changes_coded1)_3", "OneHot()(eating_changes_coded1)_5", "OneHot()(eating_changes_coded1)_7", "OneHot()(eating_changes_coded1)_8", "OneHot()(eating_changes_coded1)_10", "OneHot()(eating_changes_coded1)_11", "OneHot()(eating_changes_coded1)_12", "OneHot()(eating_out)_1", "OneHot()(eating_out)_2", "OneHot()(eating_out)_3", "OneHot()(eating_out)_4", "OneHot()(eating_out)_5", "OneHot()(ethnic_food)_1", "OneHot()(ethnic_food)_2", "OneHot()(ethnic_food)_3", "OneHot()(ethnic_food)_4", "OneHot()(ethnic_food)_5", "OneHot()(fav_cuisine_coded)_0", "OneHot()(fav_cuisine_coded)_1", "OneHot()(fav_cuisine_coded)_2", "OneHot()(fav_cuisine_coded)_3", "OneHot()(fav_cuisine_coded)_4", "OneHot()(fav_cuisine_coded)_5", "OneHot()(fav_cuisine_coded)_8", "OneHot()(fruit_day)_2", "OneHot()(fruit_day)_3", "OneHot()(fruit_day)_4", "OneHot()(fruit_day)_5", "OneHot()(grade_level)_1", "OneHot()(grade_level)_2", "OneHot()(grade_level)_3", "OneHot()(grade_level)_4", "OneHot()(greek_food)_1", "OneHot()(greek_food)_2", "OneHot()(greek_food)_3", "OneHot()(greek_food)_4", "OneHot()(greek_food)_5", "OneHot()(healthy_feeling)_1", "OneHot()(healthy_feeling)_2", "OneHot()(healthy_feeling)_3", "OneHot()(healthy_feeling)_4", "OneHot()(healthy_feeling)_5", "OneHot()(healthy_feeling)_6", "OneHot()(healthy_feeling)_7", "OneHot()(healthy_feeling)_8", "OneHot()(healthy_feeling)_9", "OneHot()(healthy_feeling)_10", "OneHot()(ideal_diet_coded)_1", "OneHot()(ideal_diet_coded)_2", "OneHot()(ideal_diet_coded)_3", "OneHot()(ideal_diet_coded)_4", "OneHot()(ideal_diet_coded)_5", "OneHot()(ideal_diet_coded)_6", "OneHot()(ideal_diet_coded)_7", "OneHot()(ideal_diet_coded)_8", "OneHot()(income)_1", "OneHot()(income)_2", "OneHot()(income)_3", "OneHot()(income)_4", "OneHot()(income)_5", "OneHot()(income)_6", "OneHot()(indian_food)_1", "OneHot()(indian_food)_2", "OneHot()(indian_food)_3", "OneHot()(indian_food)_4", "OneHot()(indian_food)_5", "OneHot()(italian_food)_3", "OneHot()(italian_food)_4", "OneHot()(italian_food)_5", "OneHot()(life_rewarding)_1", "OneHot()(life_rewarding)_2", "OneHot()(life_rewarding)_3", "OneHot()(life_rewarding)_4", "OneHot()(life_rewarding)_5", "OneHot()(life_rewarding)_6", "OneHot()(life_rewarding)_7", "OneHot()(life_rewarding)_8", "OneHot()(life_rewarding)_9", "OneHot()(life_rewarding)_10", "OneHot()(nutritional_check)_1", "OneHot()(nutritional_check)_2", "OneHot()(nutritional_check)_3", "OneHot()(nutritional_check)_4", "OneHot()(nutritional_check)_5", "OneHot()(parents_cook)_1", "OneHot()(parents_cook)_2", "OneHot()(parents_cook)_3", "OneHot()(pay_meal_out)_2", "OneHot()(pay_meal_out)_3", "OneHot()(pay_meal_out)_4", "OneHot()(pay_meal_out)_5", "OneHot()(pay_meal_out)_6", "OneHot()(thai_food)_1", "OneHot()(thai_food)_2", "OneHot()(thai_food)_3", "OneHot()(thai_food)_4", "OneHot()(thai_food)_5", "OneHot()(turkey_calories)_345", "OneHot()(turkey_calories)_500", "OneHot()(turkey_calories)_690", "OneHot()(turkey_calories)_850", "OneHot()(veggies_day)_2", "OneHot()(veggies_day)_3", "OneHot()(veggies_day)_4", "OneHot()(veggies_day)_5", "OneHot()(waffle_calories)_575", "OneHot()(waffle_calories)_760", "OneHot()(waffle_calories)_900", "OneHot()(waffle_calories)_1315", "NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "NaN(I'm not answering this. )(weight)_weight", "WordToNumber()(weight)_weight", "Split( )(Split(,)(comfort_food)_0)_0", "Split( )(Split(-)(comfort_food)_0)_0", "Split(,)(Split( )(comfort_food)_1)_0", "Split(,)(Split( )(comfort_food)_2)_0", "Split( )(Split(,)(comfort_food_reasons)_0)_0", "Split(. )(Split(,)(comfort_food_reasons)_0)_0", "Split(, )(Split(  )(comfort_food_reasons)_0)_0", "Split( )(Split(,)(diet_current)_0)_0", "Split( )(Split(,)(diet_current)_0)_1", "Split( )(Split(. )(diet_current)_0)_1", "Split(.)(Split( )(diet_current)_1)_0", "Split(,)(Split( )(diet_current)_1)_0", "Split( )(Split(,)(eating_changes)_0)_0", "Split( )(Split(')(eating_changes)_0)_0", "Split(/)(Split( )(fav_cuisine)_0)_0", "Split(/)(Split( -)(fav_cuisine)_0)_0", "Split( )(Split(,)(food_childhood)_0)_0", "Split(,)(Split( )(healthy_meal)_2)_0", "Split( )(Split(,)(ideal_diet)_0)_0", "Split( )(Split(,)(ideal_diet)_0)_1", "Split( )(Split(. )(ideal_diet)_0)_1", "Split( )(Split(/)(ideal_diet)_0)_1", "Split(.)(Split( )(ideal_diet)_1)_0", "Split(,)(Split( )(ideal_diet)_1)_0", "Split(,)(Split( )(meals_dinner_friend)_0)_0", "Split(,)(Split( )(meals_dinner_friend)_1)_0", "Split( )(Split(, )(meals_dinner_friend)_0)_0", "Split(,)(Lowercase()(comfort_food)_comfort_food)_0", "Split( )(Lowercase()(comfort_food)_comfort_food)_0", "Split( )(Lowercase()(comfort_food)_comfort_food)_1", "Split( )(Lowercase()(comfort_food)_comfort_food)_2", "Split(,)(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "Split( )(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "Split( )(Lowercase()(diet_current)_diet_current)_0", "Split( )(Lowercase()(eating_changes)_eating_changes)_0", "Split( )(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split( -)(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split(/)(Lowercase()(fav_cuisine)_fav_cuisine)_0", "Split( )(Lowercase()(food_childhood)_food_childhood)_0", "Split( )(Lowercase()(ideal_diet)_ideal_diet)_0", "Split( )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_1", "Split(,)(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split(, )(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(sometimes choosing to eat fast food instead of cooking simply for convenience)(eating_changes)_eating_changes)_0", "Split( )(NaN(not as healthy because healthy food goes bad quickly and it is expensive)(eating_changes)_eating_changes)_0", "Split( )(NaN(Freshman year I did not watch my diet at all and really let myself go. I ate pizza and fries for almost every meal. Summer following freshman year I knew I needed to stop doing that so I cut out as many refined carbs as I could and try to eat healthier portions.)(eating_changes)_eating_changes)_0", "Split( )(NaN(Food is not as healthy. )(eating_changes)_eating_changes)_0", "Split( )(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split( -)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split(/)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_0", "Split( )(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split( -)(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split(/)(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_0", "Split( )(NaN(chicken and rice with veggies, pasta, some kind of healthy recipe)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(Anything they'd want. I'd ask them before hand what they want to eat and it depends on which type of friend is coming.)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(Some kind of pasta, a chicken dish, some kind of salad)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(NaN(any Chinese food, pasta, burgers)(meals_dinner_friend)_meals_dinner_friend)_0", "Split( )(ModeImputation()(type_sports)_type_sports)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(weight)_0)_0", "ExtractWord([Boredom, Sadness, Stress, bored, boredom, comfort, or, sadness])(Split(. )(comfort_food_reasons)_0)_0", "ExtractWord([Boredom, Sadness, Stress, bored, boredom, comfort, i, sadness])(Split(')(comfort_food_reasons)_0)_0", "ExtractWord([and, diet, eat, healthy])(Split(.  )(diet_current)_0)_0", "ExtractWord([I, and, breakfast, diet, healthy, the])(Split(. )(diet_current)_0)_0", "ExtractWord([and, diet, eat, the])(Split(')(diet_current)_0)_0", "ExtractWord([Chicken, Mac, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(Split(&)(food_childhood)_0)_0", "ExtractWord([Chicken, and, food, of, vegetable, vegetables])(Split(&)(healthy_meal)_0)_0", "ExtractWord([and, food, of, vegetable, vegetables, veggies])(Split(()(healthy_meal)_0)_0", "ExtractWord([I, a, and, diet, healthy, of])(Split(,)(ideal_diet)_0)_0", "ExtractWord([a, and, diet, eat, healthy])(Split(-)(ideal_diet)_0)_0", "ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(Split(')(meals_dinner_friend)_0)_0", "ExtractWord([Chicken, Meat, Pasta, Pizza, Steak, chicken, pasta, steak])(Split(. )(meals_dinner_friend)_0)_0", "ExtractWord([and, candy, chips, cookies, ice, pasta, pizza])(Lowercase()(comfort_food)_comfort_food)_0", "ExtractWord([a, boredom, i, sadness, stress])(Lowercase()(comfort_food_reasons)_comfort_food_reasons)_0", "ExtractWord([and, diet, i, very])(Lowercase()(diet_current)_diet_current)_0", "ExtractWord([eating, food, i, less, more])(Lowercase()(eating_changes)_eating_changes)_0", "ExtractWord([and, chicken, pasta, pizza, spaghetti, steak])(Lowercase()(food_childhood)_food_childhood)_0", "ExtractWord([and, chicken, food, meat, of, protein])(Lowercase()(healthy_meal)_healthy_meal)_0", "ExtractWord([a, and, diet, healthy, i])(Lowercase()(ideal_diet)_ideal_diet)_0", "ExtractWord([chicken, meat, pasta, pizza, steak])(Lowercase()(meals_dinner_friend)_meals_dinner_friend)_0", "ExtractWord([I, Less, More, eating, food, healthier, less, to])(ModeImputation()(eating_changes)_eating_changes)_0", "Lowercase()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "Lowercase()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "Lowercase()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "Lowercase()(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "Lowercase()(NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine)_NaN(Any type of Colombian cuisine)(fav_cuisine)_fav_cuisine", "Lowercase()(ModeImputation()(type_sports)_type_sports)_ModeImputation()(type_sports)_type_sports", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_Chocolate", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_Pizza", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_and", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cake", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_chips", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cookies", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_cream", "OneHot()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_pizza", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Boredom", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_I", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Sadness", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_Stress", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_bored", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_boredom", "OneHot()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_sadness", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_and", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_eat", "OneHot()(ExtractWord([and, eat, healthy])(diet_current)_0)_healthy", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_I", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_Less", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_More", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_eat", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_food", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_less", "OneHot()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_to", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Spaghetti", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_Steak", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_and", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_steak", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_and", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_food", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_of", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_vegetable", "OneHot()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_veggies", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_I", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_a", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_diet", "OneHot()(ExtractWord([I, a, and, diet, healthy])(ideal_diet)_0)_healthy", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_Pizza", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_and", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_chicken", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_pasta", "OneHot()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_steak", "NaN(Not)(Split( )(diet_current)_0)_Split( )(diet_current)_0", "NaN(Not)(Split( )(diet_current)_1)_Split( )(diet_current)_1", "NaN(not)(Split( )(eating_changes)_0)_Split( )(eating_changes)_0", "NaN(Any type of Colombian cuisine)(NaN(Anything american style.)(fav_cuisine)_fav_cuisine)_NaN(Anything american style.)(fav_cuisine)_fav_cuisine", "NaN(Not sure, 240)(NaN(I'm not answering this. )(weight)_weight)_NaN(I'm not answering this. )(weight)_weight", "ModeImputation()(Split( )(eating_changes)_1)_Split( )(eating_changes)_1", "ModeImputation()(Split( )(eating_changes)_2)_Split( )(eating_changes)_2", "ModeImputation()(ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0)_ExtractWord([Chocolate, Pizza, and, cake, chips, cookies, cream, pizza])(comfort_food)_0", "ModeImputation()(ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0)_ExtractWord([Boredom, I, Sadness, Stress, bored, boredom, sadness])(comfort_food_reasons)_0", "ModeImputation()(ExtractWord([and, eat, healthy])(diet_current)_0)_ExtractWord([and, eat, healthy])(diet_current)_0", "ModeImputation()(ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0)_ExtractWord([I, Less, More, eat, eating, food, less, to])(eating_changes)_0", "ModeImputation()(ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0)_ExtractWord([Chicken, Pasta, Pizza, Spaghetti, Steak, and, chicken, pizza, steak])(food_childhood)_0", "ModeImputation()(ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0)_ExtractWord([and, food, of, vegetable, vegetables, veggies])(healthy_meal)_0", "ModeImputation()(ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0)_ExtractWord([Chicken, Pasta, Pizza, and, chicken, pasta, steak])(meals_dinner_friend)_0", "ModeImputation()(NaN(I'm not answering this. )(weight)_weight)_NaN(I'm not answering this. )(weight)_weight"]}]}