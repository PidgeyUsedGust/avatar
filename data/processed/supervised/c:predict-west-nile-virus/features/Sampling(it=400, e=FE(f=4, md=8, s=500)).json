{"SamplingSelector(iterations=400, evaluator=FeatureEvaluator(folds=4, max_depth=8, sample=500))": [{"scores": [0.2010276165937487, 0.06789865013154525, 0.06850195355767533, 0.07535704891026432, 0.10738469483630168, 0.13690877574060012, 0.0685275262031833, 0.08323617460447183, 0.030268160833704885, 0.16088939858850468, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent"]}, {"scores": [0.17849036272615654, 0.0077723313977057324, 0.012880695991326033, 0.005152310871480411, 0.017706092897797718, 0.017958433360180232, 0.04561400405139689, 0.02224539286999203, 0.000854747668938206, 0.08968671483808326, 0.0, 0.026427804501313983, 0.04800495037154697, 0.05064094751805006, 0.0033775571270192326, 0.047727225733666515, 0.0017023607744918485, 0.007349904536109212, 0.0033219547460885284, 0.032505820973284964, 0.01529141079565498, 0.01787101447574493, 0.004244766772417512, 0.02727678292160502, 0.0015148596267288976, 0.0053223759244997865, 0.0061116996537590425, 0.03147943556713193, 0.006782815314680943, 0.005005247499564542, 0.03381882828040641, 0.005893617338309019, 0.00038222344361818104, 0.0001421626940000246, 0.0, 0.006651322688548104, 0.006836533632256706, 0.004801235128225888, 0.0001366937476535908, 0.005296525198770126, 0.022905213365435082, 0.004566884169061338, 0.005272347548043431, 0.004083351128007005, 0.05351386422418313, 0.0802366957644385, 0.01926403046945731, 0.0034611723706172125, 0.0, 0.000799825879328689, 0.001617451423224342], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9"]}, {"scores": [0.11740116477758114, 0.006807760973849801, 0.009152459200450777, 0.0033162908880168735, 0.015079229145584802, 0.042407425789670675, 0.01530936120691017, 0.07184400640501168, 0.0010941717142492148, 0.17525734911598542, 0.0, 0.010476878583255177, 0.014314988100420884, 0.04994619453195257, 0.0, 0.0026841378098099587, 0.0, 0.007333111230502114, 0.0006310530757865188, 0.006078161524772923, 0.0008465054435909897, 0.00021683464262011807, 0.0, 0.004786309430406603, 0.00027411402644803446, 0.005578456322092287, 0.0011837265443833656, 0.013966639492407383, 0.0011808058643373543, 0.0031674479369519066, 0.016462959985645634, 0.0012965675644485415, 0.0001796609471324197, 4.638027537539602e-05, 0.0, 0.0038068282743445813, 0.005367535572055869, 0.004294141398450902, 0.0, 0.004605696576977134, 0.007570608186085429, 0.003395581406234477, 0.004030079067302336, 0.004290920633702686, 0.002517823220428099, 0.003150321200236218, 0.044813039455208356, 0.003560702552029664, 0.0, 0.0011157919285140856, 0.001223927322672267, 0.0006514669670064155, 0.006527801012281339, 0.0009898741133403173, 0.0, 0.003714931244030219, 0.005766644296862939, 0.0009491031918825677, 0.00020757500394769608, 0.0, 0.0022752617815230687, 0.0, 0.0001483262110119529, 0.0, 0.004928176417933073, 0.0002758080952289454, 0.0012005230392444343, 0.0012610947435178692, 0.0007936183779344364, 0.0, 0.0, 0.0, 0.0, 7.334315940437154e-05, 0.0, 0.0007291001736134953, 0.0, 0.0007391070621784672, 0.0004612539318872514, 0.0, 0.0, 0.0013392868925376435, 0.0003776693341437031, 9.597115620975378e-05, 0.0, 0.0, 0.0, 0.0, 0.00288676333889949, 0.001121782626668775, 0.00013222345214888316, 0.0001454603987880025, 7.202883881004365e-05, 0.0001985298959801348, 9.395078422865522e-05, 0.012455622594483795, 0.04853893560822104, 0.003694769911963398, 0.003729973727584315, 0.0025319738199217124, 0.0041642800514247475, 0.0034825362877801552, 0.004396828922973943, 0.0028669152134848446, 0.004292441407772049, 0.0036049936361936008, 0.0043950261044089405, 0.0026525108840271374, 0.0033371220363132867, 0.004476307112950843, 0.005653275893806352, 0.0042077404138057585, 0.003343597481405158, 0.003533419108203386, 0.004321899339797063, 0.004425756291869201, 0.005238020385148811, 0.004186335516748874, 0.002938867622948136, 0.0029461611666350748, 0.003618842851486722, 0.003028977571238953, 0.003631991162893751, 0.0010612487692088465, 0.00018221242395970668, 0.0, 0.00948978150453781, 0.0016385161873432588, 0.0009895304974816706, 0.003062382396710561, 0.024772760947010877, 0.004251832426148527, 0.00016028231908284173, 0.0006763777751117947, 0.043021575206570455, 0.006187431675479774, 0.0005238432594694311, 0.0, 3.588434048840275e-05, 0.0005634736727345628, 0.0007436870028427607, 0.0007098547937199451, 0.0042403688257624805, 0.005955669233104583, 0.0, 0.001677742955805833, 0.00014059677679805152], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6"]}, {"scores": [0.11999110644303147, 0.007822456707517012, 0.008430019607958337, 0.0030280517276184086, 0.013125263393650628, 0.04056546689696305, 0.015481562944642929, 0.07192432881094146, 0.0009616135279808292, 0.17533684723156132, 0.0, 0.007901821832114162, 0.012490841972432026, 0.049555406616497856, 0.00014244021531567008, 0.001283592518065624, 0.0, 0.002987044443930422, 0.0006067794168850852, 0.005298932351995905, 0.0007917829265116518, 0.00011628055456710993, 0.0, 0.00148442875786256, 0.0, 0.0068292965688430225, 0.0003509260731510009, 0.01594817330884758, 0.0005952260868564902, 0.003114253472324567, 0.014284149101264717, 0.0007065894547376122, 0.00025397283887659854, 8.617588961157101e-05, 0.0, 0.0029886964647482437, 0.004563932169348615, 0.0034447407403098277, 0.0, 0.004253193595567233, 0.008187859489057068, 0.0024139815749791354, 0.0018418101828620872, 0.002429531323726802, 0.0006870953041986034, 0.0014468687680995501, 0.037681832843318996, 0.003326224260252769, 0.0, 0.0015575659402943367, 0.0011107931833755822, 0.000750552945487602, 0.006032310184121751, 0.0008904023039162166, 0.0, 0.0014856090445642105, 0.007134724274149594, 0.0007508228500278497, 0.00010395437586592217, 0.0, 0.0021317107559558237, 0.0, 0.00021242922547774713, 0.0, 0.0018744444045636069, 0.0, 0.0004430119536450433, 0.0004644580736043818, 7.875062884096083e-05, 0.0, 0.0, 0.0, 0.0, 3.852853014348744e-05, 5.940350836907085e-05, 0.0005715466170855141, 0.0, 0.0006280460430299207, 0.0008498799456223622, 0.0, 0.0, 0.0005339259580861454, 0.0002711950371772988, 0.0006617626025385931, 0.0, 0.0, 0.0, 0.0, 0.0016678746766239218, 0.0007590519298107627, 0.0001468104456038523, 0.0, 0.0, 0.00032888564192345483, 0.0001227468279377582, 0.01350819547374117, 0.04444752996242878, 0.002519702648214093, 0.00225090661713511, 0.0018276158924700962, 0.0014852150882981687, 0.0015820217526617308, 0.0037382835117864112, 0.0016813760357125656, 0.0027462052510532405, 0.003352092976315609, 0.001180749732777631, 0.0010456908136958728, 0.0014042566388224413, 0.0009180720756218736, 0.0008089106920576011, 0.002530694278147651, 0.0030062205878101126, 0.002675426645459786, 0.0017879961535858578, 0.0012612934822823425, 0.0011063285170497554, 0.0021445478294608625, 0.002136212653401563, 0.0027676475619602624, 0.0017839494969909303, 0.0012298270023610156, 0.00401579188750722, 0.0006635892375785519, 0.0, 0.0, 0.009638585712118845, 0.0007102493348062418, 0.0013689149310527815, 0.0034963361195092493, 0.02407099405990532, 0.004226251486435588, 0.0003166761564814539, 0.0004638332881900517, 0.04988088317660703, 0.004849817822008914, 0.00016644240356565183, 0.0, 4.0749637605480965e-05, 0.0005821899490758264, 0.00038484184198171457, 0.0012780555550512673, 0.002561803574328638, 0.0009743882213529973, 0.0, 0.00017430702310099303, 4.9078284505774686e-05, 0.0, 0.0, 0.0, 0.0005864037202602268, 8.405644672699786e-05, 0.0008150345227466994, 0.0012057665441338912, 0.003298480783581772, 0.002751152350564652, 0.0015856803187040058, 0.0016995060125014397, 0.000992016579437556, 0.0012393893099010061, 0.0012054575155359699, 0.0005705322282881305, 0.0008233970440829595, 0.0005322491353420204, 0.001806467478718479, 0.0018091103259078405, 0.001488595792600903, 0.0007703878073161485, 0.0022212128472940997, 0.0008781289994872487, 0.002209100141239821, 0.002044263793499188, 0.00284912198629452, 0.00309399550326814, 0.0016974552201734266, 0.0017497821473485768, 0.0016962539289577954, 0.002146356413177403, 0.0027620321915193674, 0.0015317074262452951, 0.0016430456372254138, 0.0012787837379994154, 0.0007775109492861757, 0.0010086118729588061, 0.0016548625976787546, 0.003647013253761184, 0.002215481692481082, 0.0021702669761122888, 0.001219662613853063, 0.0020415050353793903, 0.0013048977608982328, 0.0008800242505309776, 0.0025080778520447334, 0.0013410915582578995, 0.0021203234780723377, 0.002084451093543723, 4.89189089566154e-05, 0.0, 0.0, 0.0, 0.0, 0.001437333922946825, 0.0013462540327222878, 0.001411347073701369, 0.0007896607157306541, 7.656577386753827e-05, 0.0012845548982956746, 0.0001685312769959007, 0.0011358437022620056, 0.0015311074397728929, 0.0010287497545645008, 0.003716554999592342, 0.0007611527301470692, 0.0023031641424617728, 0.0017702794304358823, 8.976050686226778e-05, 0.0, 0.0017989704248047125, 0.0, 0.0, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6", "Split(,)(Split( )(Split(')(Address)_0)_4)_0", "Split(,)(Split( )(Split(')(Address)_0)_5)_0", "SplitAlign(,)(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_USA", "SplitAlign(.)(ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3)_AVE", "SplitAlign(,)(ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6)_IL", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractWord([Alsip, Bensenville, Chicago, IL, O, Riverdale, Rosemont])(Split( )(Split(,)(Address)_1)_1)_0", "ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(Split( )(Split(')(Address)_0)_7)_0", "ExtractWord([o, usa])(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_0", "Numerical()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Avenue", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Road", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Street", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_West", "OneHot()(ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0)_S", "WordToNumber()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "WordToNumber()(Split( )(Lowercase()(Address)_Address)_0)_Split( )(Lowercase()(Address)_Address)_0", "ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3", "ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2", "ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4", "ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5", "ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6", "ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7", "ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ModeImputation()(ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0)_ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0"]}, {"scores": [0.12686659842594067, 0.0057285892380970075, 0.008588540893098752, 0.0028753377002265156, 0.012236477107423758, 0.043230744492947296, 0.017609071512010726, 0.07250120773057131, 0.0013365437471563317, 0.16418042862105428, 0.0, 0.009626644052675102, 0.012923567603446071, 0.046182830186569476, 0.00010784722742357341, 0.0005456280208007118, 0.0, 0.0033116869675558556, 0.0012028157340582169, 0.00806926649423055, 0.0005514057092928723, 0.0, 0.0, 0.00026189636608998235, 0.0, 0.00471020600509773, 0.0009411992232920709, 0.012555085280724965, 0.0010903094745860606, 0.0022811034866242917, 0.013157868702627272, 0.0006459370597772658, 8.077759476187246e-05, 0.0, 0.0, 0.0025327486821181597, 0.007159138183513889, 0.0033368370230652954, 0.0, 0.004609532972130494, 0.005577355424957247, 0.0016812420570773002, 0.0027518022494606967, 0.002481880626868845, 0.0004780472082682169, 0.0008201058375897252, 0.04369813542709814, 0.0025867111849552644, 0.0, 0.0015565398389922305, 0.0013006891070465613, 0.0008464959748355027, 0.00734004990035917, 0.0015712806839231052, 0.0, 0.0008776592052549026, 0.006473849176060034, 0.0007106471554632187, 0.0, 0.0, 0.00041657013850277924, 0.0, 5.52958759345805e-05, 0.0, 0.0008413787023460342, 0.0, 0.000611727298303546, 0.0008061428407756404, 0.0002090475058512381, 0.0, 0.0, 0.0, 0.0, 4.259783528425454e-05, 0.0, 0.00042519783072678813, 0.0, 0.0005152461709148798, 0.00016793848576129286, 0.0, 0.0, 0.0009733293501529607, 0.0005440637186131506, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002688840406882748, 0.00037264817796425916, 0.00017888373684057812, 0.0, 0.0, 3.3743406350345915e-05, 0.0, 0.012514988639257384, 0.04788635643657954, 0.0022489579226899884, 0.0014055084655711428, 0.002971089688281391, 0.0006252731490684744, 0.0005489637420395, 0.0005427645087775759, 0.0028365527048986633, 0.002869283465811092, 0.002408469863855801, 0.001082028848787336, 0.00040862087010189386, 0.000210883098799676, 0.0005860591816186236, 0.0005105999535049327, 0.0003553686573046286, 0.0026190396999042956, 0.0027912865935655782, 0.00398797696632251, 0.00038839166002018193, 0.0007371453398604652, 0.0022959835854723487, 0.0017220569458664345, 0.0021017487207559164, 0.00026775677599544457, 0.0003488387396847215, 0.002755273588393443, 0.0006091381031666177, 0.0, 0.0, 0.013206810270606816, 0.0015690636648282895, 0.0009643041893066895, 0.0030927611562892327, 0.02633889710268018, 0.004821082962204348, 0.00010775495620777111, 0.0006032418465981958, 0.041116841383083864, 0.004906203388331142, 0.00037204764171361597, 0.0, 0.00021974371595646734, 0.00036848421489596287, 0.00047106793388040945, 0.0008635098193467433, 0.0024253292209168004, 0.00041661482973566027, 0.0, 0.0004958756990653252, 0.0, 3.545965834522859e-05, 0.0, 0.0, 0.0003970401581091475, 0.0, 0.0008653633653466505, 0.0002850899409730694, 0.0004679970869944417, 0.000651899600574679, 0.0007476990893797715, 0.0005392941411448449, 0.0013547293409529157, 0.0005307824877291872, 0.0006194580820802938, 0.00026568118835038654, 0.0009596946706853539, 0.0007313418587795587, 0.0007553192270995134, 0.0006470324186950839, 0.0006517929046053139, 0.0007175941073132161, 0.0006067674508068023, 0.0003829233107596676, 0.0030129709295961663, 0.003173310440754959, 0.003046310398218512, 0.0010316048151682165, 0.000508803996109646, 0.0007616820225166955, 0.0023276392356442453, 0.002704138449855719, 0.003150506187200021, 0.0002172511629140235, 0.0007864141891461491, 0.0002875081380983358, 0.0004033936457162381, 0.0004431891824113823, 0.0011448863801094308, 0.0028189539224934596, 0.0023690425766521917, 0.0029202941716938587, 0.000745239880758374, 0.0005439588704673094, 0.0012859534111802553, 0.0009707707895784309, 0.0005025772557769517, 0.0003393528538315532, 0.0007081624968602747, 0.00046635716745577633, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007106897853889787, 0.0012282354593251485, 0.0013460318085990056, 0.00047718041449993845, 0.0, 0.00034000415340947765, 0.00018167334255667596, 0.00046791850528959207, 0.0009318031503426958, 0.0006901930067456346, 0.0019220315463306524, 0.001325392024816386, 0.0006029588312896673, 0.0003652973907610559, 0.0, 0.0, 0.0002745635390170911, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004523407762973169, 0.0002828997917065869, 0.0004608872258606089, 0.0006734960720433199, 0.0003568907940036783, 0.00033814362499223435, 0.00030063269747024714, 0.0006644101870388066, 0.00041744641560349165, 0.0004600091785383439, 0.0005701702701622779, 0.0004203778996125097, 0.00072847164706349, 0.0007534470082885864, 0.00042242308320766255, 0.0012620036668343298, 0.0009915015266579576, 0.0005222911025146083, 0.0007615288426133109, 0.0004869787400479219, 0.0006478323993623389, 0.0005351409529672639, 0.00042750559059108917, 0.0005632318965504154, 0.0009988505609842208, 0.0005202760059031299, 0.0011546242573452986, 0.0012492838248588838, 0.00032125385430593846, 0.0009136150524048287, 0.0004796771977084065, 0.0004838841561509468, 0.0006244318533582393, 0.00044602629096537243, 0.0003750805460873715, 0.0016408796127150836, 0.0004560752072241336, 0.0005970052233123846, 0.0006774731102910466, 0.0011385513762117042, 0.0005668098130802945, 0.00038167528109757837, 0.0003762642251395465, 0.001119718464949266, 0.0008950557310421844, 0.000328907270703462, 0.0006659566552083472, 0.0005902872086102337, 0.0007968861464846502, 0.0008954348505482094, 0.0004151961784292023, 0.0006829710370155387, 0.0012771968161906185, 0.0006864593816862135, 0.0007480165136886179, 0.00045278289956872614, 9.72621919617195e-05, 0.0013704883839385494, 0.0010994969000105135, 0.00060140515408837, 0.0002999585074434092, 0.0002490711315092904, 0.0002683824577996746, 0.0007896496014562847, 0.0007459125823817627, 0.0003085596083779151, 0.0008512959350221286, 0.0008435089640855659, 0.0013246515684207864, 0.00019828838225358886, 0.0, 0.0, 0.00045998383675012304, 0.00023391338325971835, 0.00043637095241047665, 0.0007785806135031835, 0.0008147905290776738, 0.0003301405474970299, 0.00027856239895493955, 0.0, 0.00034260475975473866, 0.0, 0.0002723201311537728, 0.0005444551731043036, 0.0007589327218050046, 0.000556523349032581, 0.00044583221217385754, 0.0011239816622992834, 0.0007448649176131742, 0.00028205181069622506, 0.0005934971389883474, 0.0009209597859941301, 0.0011607751265719061, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6", "Split(,)(Split( )(Split(')(Address)_0)_4)_0", "Split(,)(Split( )(Split(')(Address)_0)_5)_0", "SplitAlign(,)(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_USA", "SplitAlign(.)(ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3)_AVE", "SplitAlign(,)(ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6)_IL", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractWord([Alsip, Bensenville, Chicago, IL, O, Riverdale, Rosemont])(Split( )(Split(,)(Address)_1)_1)_0", "ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(Split( )(Split(')(Address)_0)_7)_0", "ExtractWord([o, usa])(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_0", "Numerical()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Avenue", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Road", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Street", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_West", "OneHot()(ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0)_S", "WordToNumber()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "WordToNumber()(Split( )(Lowercase()(Address)_Address)_0)_Split( )(Lowercase()(Address)_Address)_0", "ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3", "ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2", "ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4", "ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5", "ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6", "ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7", "ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ModeImputation()(ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0)_ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "Split(,)(ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4)_0", "Split(,)(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_0", "SplitAlign( )(ModeImputation()(Split(,)(Split(')(Address)_0)_3)_Split(,)(Split(')(Address)_0)_3)_USA", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4)_Chicago", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_IL", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7)_USA", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d+,))(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractWord([Chicago, IL, King, USA])(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7)_0", "Numerical()(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_Split( )(Split(,)(Split(')(Address)_0)_2)_2", "Numerical()(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_Split( )(Split(, )(Split(')(Address)_0)_2)_1", "Numerical()(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2", "Numerical()(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1", "Numerical()(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3)_Avenue", "OneHot()(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_IL", "OneHot()(ModeImputation()(ExtractWord([Alsip, Avenue, Chicago, Drive, IL, International, Luther, MDW, Rosemont])(Split( )(Address)_4)_0)_ExtractWord([Alsip, Avenue, Chicago, Drive, IL, International, Luther, MDW, Rosemont])(Split( )(Address)_4)_0)_Chicago", "OneHot()(ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_IL", "WordToNumber()(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_Split( )(Split(,)(Split(')(Address)_0)_2)_2", "WordToNumber()(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_Split(,)(Split( )(Split(')(Address)_0)_6)_0", "WordToNumber()(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_Split( )(Split(, )(Split(')(Address)_0)_2)_1", "WordToNumber()(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1", "WordToNumber()(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "WordToNumber()(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "WordToNumber()(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "ModeImputation()(ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0)_ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0"]}]}