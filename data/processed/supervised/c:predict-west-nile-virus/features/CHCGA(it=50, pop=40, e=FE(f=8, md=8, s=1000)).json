{"CHCGASelector(iterations=50, population=40, evaluator=FeatureEvaluator(folds=8, max_depth=8, sample=1000))": [{"scores": [0.0, 0.07024090606899919, 0.0, 0.03635425042077314, 0.14616514514634243, 0.23106381844286142, 0.18187469401950707, 0.2893370390557706, 0.04496414684574619, 0.0, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent"]}, {"scores": [0.0, 0.0, 0.09575852645700089, 0.01928952810949383, 0.04362753181252956, 0.07341994301400942, 0.03166007547368027, 0.18056574120107566, 0.0027196557260448753, 0.0, 0.0, 0.0705476531881064, 0.0, 0.0, 0.0, 0.01888248344921301, 0.00020143061876376207, 0.05573258951859733, 0.006525456272809493, 0.006354902449468908, 0.0005716154744165956, 0.0016564390378079198, 0.0012743194599455707, 0.01643472218842122, 0.03244994951188232, 0.05301998174900668, 0.00038612622059858566, 0.04154056369838655, 0.00015032157859172287, 0.012667408880540201, 0.03566643426206262, 0.0005597071658620713, 0.007592693253031892, 0.0002848696047271835, 0.0, 0.016496856946597447, 0.0029889910767040262, 0.005728740426632309, 0.0, 0.026195269151792638, 0.034847217869627564, 0.004066663779195054, 0.01444515375353483, 0.007809642248527056, 0.013821432152568345, 0.0306560206651333, 0.017821207609782765, 0.011264411928866567, 0.0, 0.0025530052046480053, 0.001764717810315667], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9"]}, {"scores": [0.0, 0.00568857865826743, 0.011982132407842993, 0.011339540862647348, 0.0, 0.03475861232615416, 0.029519460415301797, 0.034735238524152404, 0.0008365055321983302, 0.0, 0.0, 0.03612615430585096, 0.07086235203893013, 0.02988881645402779, 0.0, 0.002759263810123441, 0.0, 0.01125254899223794, 0.0, 0.022714805808956375, 0.0032451287652866256, 0.00021127196563975394, 0.0, 0.005384764518882924, 0.0, 0.008875280671438402, 0.01623315672852269, 0.003987479232164912, 0.0003403876508696948, 0.005863524216869914, 0.01891182720553245, 0.0029169263134100577, 0.0, 0.0, 0.0, 0.002735180312336223, 0.0029375197193478976, 0.002015595993451424, 8.407379809173232e-05, 0.0, 0.012000645751580654, 0.003768751774606842, 0.008503214172992145, 0.0043809829021756955, 0.0023573444794691583, 0.01426456649066437, 0.03260882875307765, 0.0015772276079428966, 0.0, 0.0, 0.000686088477267354, 0.0016760333338508705, 0.013125098371295982, 0.0038807451888990237, 0.0, 0.01524375308107187, 0.006184198680246925, 0.002032083729383853, 0.0, 0.0, 0.0016894252250735015, 0.0, 0.0, 0.0, 0.0037594530972937983, 0.0, 0.00037314190576326383, 0.004230967322069676, 0.00019448346884866732, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0028968889589994465, 0.0033084727814500035, 0.0, 0.00021966253483690667, 0.002145436247195722, 0.0, 0.0, 0.0020696278814234365, 0.0012218358441643104, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004967791492884812, 0.0007599694204467399, 0.000995806919693277, 0.0, 0.0, 0.0, 0.0, 0.11709418299350233, 0.031441859354468596, 0.00947991262830232, 0.007996713214638568, 0.008763174606060624, 0.001044646928094534, 0.022202154032546707, 0.0012561766855799016, 0.00651411256901881, 0.0008002555272175157, 0.010635573964293897, 0.003668016022695064, 0.007858497445350335, 0.002267797390802769, 0.0004965325798808249, 0.011153899774965031, 0.0019365052874747962, 0.011493869010467499, 0.01813221885192356, 0.010448606294846279, 0.011889786197754899, 0.012885617107304813, 0.012119326650221139, 0.008464101048621584, 0.005220181659759025, 0.0, 0.01109524083042654, 0.0, 0.0025740056756924363, 0.0, 0.0, 0.0, 0.0052946807455871965, 0.014565535969994922, 0.044670199031338315, 0.0034176224502351247, 0.008870809988590857, 0.0, 0.0035836015063012094, 0.020736015437170168, 0.007706596257457874, 0.0005570194947558087, 0.0, 0.0, 0.00339000933094559, 0.0003759053797889615, 0.0, 0.004878391162165929, 0.0051857112811614136, 0.0, 0.0005062845093916167, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6"]}, {"scores": [0.09776239472520588, 0.0007503947612164701, 0.0, 0.011917436656643113, 0.032769457786806316, 0.025513081398712195, 0.029131863989988016, 0.023598940499405287, 0.0002111881826896977, 0.0, 0.0, 0.0323516924444478, 0.11285188234485505, 0.027998643522894134, 0.0, 0.0021491832140784397, 0.0, 0.0019465969491048159, 0.0, 0.016696469027214878, 0.003953694768068951, 0.0, 0.0, 0.0020922983975682347, 0.0, 0.0029102903734040506, 0.0019917297662051334, 0.011921553313429221, 0.001489544934161375, 0.005167594034785584, 0.013663669850288601, 0.008484978253103393, 0.0, 0.0, 0.0, 0.011176660183462446, 0.004220662230325093, 0.0020984770345261867, 0.0, 0.0013156265045895506, 0.009667868511916493, 0.006694358437278677, 0.0028595613095549785, 0.008003487381686375, 0.0036357362354181378, 0.0007354991241438713, 0.06421194952737849, 0.0033946457009016093, 0.0, 0.0006412389167419729, 0.001149600509248326, 0.0, 0.008788091083222547, 0.008625318739975095, 0.0, 0.0010700302129388588, 0.00959789947568781, 0.003403385329185789, 0.0, 0.0, 0.0005803257066349167, 0.0, 0.0, 0.0, 0.0035614585437666775, 0.0, 0.004152800124146368, 0.01300655701427703, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005394229883469654, 0.0011876907469839677, 0.0, 0.0, 0.0031815292908553357, 0.0, 0.0, 0.00043954458956998907, 0.00025227324499555327, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013547412231455547, 0.0005552555803394274, 0.001083522969821071, 0.0, 0.0, 0.00014926193579706932, 0.0, 0.08699364509654815, 0.02438934439385539, 0.0046468659258431435, 0.0021598564241965545, 0.003456395757868558, 0.001017985729133944, 0.00039909796038067, 0.0009981887188353833, 0.003013360006007121, 0.0007717098550510061, 0.002882563765993409, 0.005264589773094305, 0.002359900699000009, 0.0024429474873768407, 0.0003427066634237096, 0.0, 0.0022888011076360195, 0.004567482083743717, 0.002740673862787203, 0.005772686372632357, 0.00018509247395780408, 0.00047393163800774643, 0.006331676293393117, 0.010211830080645528, 0.0033342460128027492, 0.001081172553534583, 0.0003152406812402464, 0.006827574953572253, 0.0007258073332433784, 0.0, 0.0, 0.002815453781701494, 0.0, 0.005098861924825179, 0.014434774413137908, 0.0024785014455458872, 0.016668102059971858, 0.00037568213036450897, 0.00044541239600148595, 0.00605728558357489, 0.0007940423300768824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0006461524406325437, 0.0041165302370873786, 0.0003778108067006058, 0.0, 0.0018253339851326555, 0.0008035655169538538, 0.0, 0.0, 0.0, 0.0, 0.0007967346822772885, 0.00024365234182193506, 0.001614266327119923, 0.0026754717146307058, 0.00044936010467122193, 0.0008176734101355235, 0.0, 0.0, 0.0, 0.0011398103763064521, 0.0008429528125834687, 0.0011826952932609965, 0.0, 0.0, 0.00040945807075013944, 0.0004982225071946318, 0.002397152015626151, 0.002944418749440406, 0.0031974871537831617, 0.0010095706430768671, 0.0014562701579981404, 0.009472032337585626, 0.0, 0.0003080771519076029, 0.0008298726531372168, 0.001050420997203876, 0.0024144938246687905, 0.00700178263516122, 0.0005057062329981323, 0.0, 0.0, 0.002219123316918182, 0.0008702395973554837, 0.002933506381281076, 0.006802289187788471, 0.0009688221983865954, 0.0008999063770537863, 0.001071584204437298, 0.0006813352834472611, 0.00270477662740352, 0.001006379109758764, 0.002599510586899371, 0.0007982679696575484, 0.0022786484320242908, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0029066308229784062, 0.0008556406028269497, 0.0005685369688996602, 0.0, 0.0, 0.0, 0.0, 0.00030108257073487515, 0.005217196755240402, 0.0006166547770557559, 0.012905948639910588, 0.0005773193898645213, 0.0017341942462057204, 0.0008122579623157851, 0.0, 0.0, 0.0006279524332552362, 0.0, 0.0, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6", "Split(,)(Split( )(Split(')(Address)_0)_4)_0", "Split(,)(Split( )(Split(')(Address)_0)_5)_0", "SplitAlign(,)(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_USA", "SplitAlign(.)(ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3)_AVE", "SplitAlign(,)(ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6)_IL", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractWord([Alsip, Bensenville, Chicago, IL, O, Riverdale, Rosemont])(Split( )(Split(,)(Address)_1)_1)_0", "ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(Split( )(Split(')(Address)_0)_7)_0", "ExtractWord([o, usa])(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_0", "Numerical()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Avenue", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Road", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Street", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_West", "OneHot()(ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0)_S", "WordToNumber()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "WordToNumber()(Split( )(Lowercase()(Address)_Address)_0)_Split( )(Lowercase()(Address)_Address)_0", "ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3", "ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2", "ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4", "ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5", "ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6", "ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7", "ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ModeImputation()(ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0)_ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0"]}, {"scores": [0.0, 0.00875070207320472, 0.014127874109761324, 0.006756336966202211, 0.008407658531303102, 0.0962683636120551, 0.033634695382562516, 0.007200829537260893, 0.0, 0.0, 0.0, 0.010698964013980978, 0.038317583118520224, 0.04374336394317067, 0.0, 0.004220959571181189, 0.0, 0.0009875514484968691, 0.0, 0.014841681465004312, 0.005647558023139528, 0.0, 0.0, 0.0, 0.0, 0.0003742254194520378, 0.003570093292432875, 0.013274354893829802, 0.001532280077776396, 0.007890006682568096, 0.007260181925425924, 0.0010857549576260648, 0.0004162605211941108, 0.0, 0.0, 0.00894375725835947, 0.011323417424910182, 0.00047220818303625694, 0.0, 0.0, 0.05880824086589711, 0.000662082706290956, 0.008522376193279644, 0.00021196077489496874, 0.0006944360065486629, 0.00017417226265280556, 0.011279410623018621, 0.007538676732939246, 0.0, 0.0, 0.0, 0.0006047469879082164, 0.021350939163190384, 0.0, 0.0, 0.0, 0.024389604738854872, 0.00499739956562621, 0.0, 0.0, 0.00040255845246121657, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0011204335704067057, 0.0007335511363846748, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005505914888997402, 0.0, 0.0, 0.0008443354878311326, 0.0007091306635676141, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0038182440439877416, 0.0007853678404860366, 0.0005003718116197364, 0.0, 0.0, 0.0, 0.0, 0.21148748847547086, 0.02531558902014974, 0.00910724827064692, 0.002726905777571384, 0.008362391369311313, 0.003020228665298412, 0.0, 0.00022422519114172483, 0.0033688001625496013, 0.0034032939539816046, 0.0006978529895505733, 0.0, 0.0, 0.0, 0.0, 0.0009521898862195324, 0.0001530862731047343, 0.003705918081567717, 0.0033525859708791223, 0.00341819442504267, 0.0, 0.0011682061699133585, 0.00962290121314321, 0.005377875269934536, 0.000566431935398389, 0.0, 0.00044622315614700715, 0.0004257001708105218, 0.0023359476120073546, 0.0, 0.0, 0.0, 0.0, 0.007202478959891301, 0.01706959525826607, 0.0, 0.01900204560035624, 0.0008613470875327839, 0.0005684838910863004, 0.0, 0.00014385756366195972, 0.0, 0.0, 0.0, 0.0004165264651739195, 0.0014099777888475235, 0.0, 0.0019654860280367407, 0.0, 0.0, 0.0011947894921406322, 0.0, 0.0, 0.0, 0.0, 0.0012607421691093349, 0.0, 0.0017255728054289708, 0.00017772165337083168, 0.00018985019640180525, 0.0004815208834083092, 0.0, 0.0005387998111031192, 0.0, 0.0, 0.0017433873736604373, 0.0017261560642733884, 0.007073934774734757, 0.00202981038551938, 0.0006576145382337293, 0.0, 0.00033108992263173036, 0.0, 0.0017998235667738656, 0.0005404783446560954, 0.004932854726595649, 0.002998043232267854, 0.0, 0.00032892633832169363, 0.0019426014541145272, 0.0010468968087222815, 0.008063830292189397, 0.003974228782735135, 0.0005088838513389034, 0.0, 0.0, 0.0022531683988057448, 0.0, 0.0, 0.0, 0.004893975099293837, 0.008231395434936528, 0.005005385119293014, 0.0006215441577492876, 0.0, 0.0005310252434187398, 0.0, 0.0011434952691848435, 0.0004960800000356196, 0.0003602023108892812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002589252603956627, 0.0, 0.0011255084228728954, 0.000469328137585806, 0.00305422745748196, 0.0017625459348126866, 0.0, 0.0, 0.00040413500971870573, 0.0005073360599805641, 0.00022297058195876106, 0.0007860351602193179, 0.0, 0.0, 0.00023123296833357177, 0.0, 0.0005449407131377705, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005405255107793734, 0.0, 0.0004320650376453691, 0.00046690915190553323, 0.0, 0.0, 0.0012964748026576525, 0.0005590601136726353, 0.0, 0.0, 0.00041400041326403636, 0.0009920258976043772, 0.0006374911149562677, 0.000567252658636986, 0.0006869896778139268, 0.0014403388580164745, 0.0008661834624574512, 0.0006243605126031413, 0.001394388977484443, 0.0005198686056835638, 0.0, 0.0005744002918368205, 0.0, 0.0023066217093074227, 0.0016174160217504356, 0.0005011481750580603, 0.0, 0.0007374112874563116, 0.0014074568914045616, 0.0008269975300807589, 0.0008884668817046438, 0.0012528710284510462, 0.0008661161100428234, 0.00028878525694299895, 0.0003163745095459098, 0.0, 0.0003755189301569196, 0.0004981098620422356, 0.002882840356933061, 0.0, 0.000259035446515326, 0.0007939855783921683, 0.003179156374296129, 0.0, 0.004042812100253788, 0.00033260907992948966, 0.00073976618721398, 0.0014670816091880432, 0.00038452781655342173, 0.0, 0.0, 0.0019491958278869514, 8.797964008868341e-05, 0.0, 0.0019990291554485905, 7.429284490378952e-05, 0.0005676975201022235, 0.0012400206724803688, 0.0006889634744516649, 0.0003574941860921854, 0.0006217549976952946, 0.001178111108077406, 0.0005150061147246948, 0.002599297962407626, 0.0, 0.0, 0.0005698874346176825, 0.0, 0.0, 0.0, 0.001284167030233729, 0.0021093286190341444, 0.0, 0.0012125522546272331, 0.0, 0.0, 0.005115473858834029, 0.0, 0.0, 0.0, 0.0003478241514998296, 0.00027894482887669584, 0.0002884864312621058, 0.0001660091184999844, 0.0003268249521914387, 0.0, 0.0004009914564597436, 0.003418900181958267, 0.0043126395936711566, 0.0008609689138084346, 0.0, 0.0], "columns": ["Date", "Address", "Species", "Block", "Street", "Trap", "Latitude", "Longitude", "AddressAccuracy", "NumMosquitos", "WnvPresent", "Split(-)(Date)_0", "Split(-)(Date)_1", "Split(-)(Date)_2", "Split(,)(Address)_1", "Split(,)(Address)_2", "Split(,)(Address)_3", "Split( )(Address)_0", "Split( )(Address)_1", "Split( )(Address)_2", "Split( )(Address)_3", "Split( )(Address)_4", "Split( )(Address)_5", "Split( )(Address)_6", "Split( )(Address)_7", "Split(/)(Species)_0", "Split( )(Street)_1", "Split( )(Street)_2", "Split( )(Street)_3", "Split( )(AddressNumberAndStreet)_0", "Split( )(AddressNumberAndStreet)_3", "Split( )(AddressNumberAndStreet)_4", "Split( )(AddressNumberAndStreet)_5", "Split( )(AddressNumberAndStreet)_6", "SplitAlign( )(Species)_ERRATICUS", "SplitAlign( )(Species)_PIPIENS", "SplitAlign( )(Species)_PIPIENS/RESTUANS", "SplitAlign( )(Species)_RESTUANS", "SplitAlign( )(Species)_TERRITANS", "SplitAlign(/)(Species)_CULEX PIPIENS", "ExtractNumber((\\d+))(Date)_0", "ExtractNumber((\\d{4}))(Address)_0", "ExtractNumber((\\d+))(Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Address)_0", "ExtractNumber((\\d+,))(Address)_0", "ExtractNumber((\\d{5},))(Address)_0", "ExtractNumber((\\d{3}))(Trap)_0", "ExtractNumber((\\d+))(AddressNumberAndStreet)_0", "OneHot()(AddressAccuracy)_5", "OneHot()(AddressAccuracy)_8", "OneHot()(AddressAccuracy)_9", "Split( )(Split(,)(Address)_0)_1", "Split( )(Split(,)(Address)_0)_2", "Split( )(Split(,)(Address)_0)_3", "Split( )(Split(,)(Address)_2)_1", "Split( )(Split(,)(Address)_2)_2", "Split(,)(Split( )(Address)_2)_0", "Split(,)(Split( )(Address)_3)_0", "Split(,)(Split( )(Address)_4)_0", "Split(,)(Split( )(Address)_5)_0", "Split(,)(Split(')(Address)_0)_2", "Split(,)(Split(')(Address)_0)_3", "Split( )(Split(')(Address)_0)_4", "Split( )(Split(')(Address)_0)_5", "Split( )(Split(')(Address)_0)_6", "Split( )(Split(')(Address)_0)_7", "Split(.)(Split( )(Street)_3)_0", "Split(,)(Split( )(AddressNumberAndStreet)_4)_0", "SplitAlign(')(Split(,)(Address)_1)_ Chicago", "SplitAlign(')(Split(,)(Address)_1)_ O", "SplitAlign( )(Split(,)(Address)_3)_IL", "SplitAlign( )(Split(,)(Address)_3)_USA", "SplitAlign(,)(Split( )(Address)_1)_Doty", "SplitAlign(,)(Split( )(Address)_1)_East", "SplitAlign(,)(Split( )(Address)_1)_North", "SplitAlign(,)(Split( )(Address)_1)_South", "SplitAlign(,)(Split( )(Address)_1)_Stony", "SplitAlign(,)(Split( )(Address)_1)_West", "SplitAlign(,)(Split( )(Address)_3)_Avenue", "SplitAlign(,)(Split( )(Address)_3)_Chicago", "SplitAlign(,)(Split( )(Address)_3)_Park", "SplitAlign(,)(Split( )(Address)_3)_Road", "SplitAlign(,)(Split( )(Address)_3)_Street", "SplitAlign(,)(Split( )(Address)_4)_Chicago", "SplitAlign(,)(Split( )(Address)_5)_60617", "SplitAlign(,)(Split( )(Address)_5)_IL", "SplitAlign(,)(Split( )(Address)_5)_USA", "SplitAlign(,)(Split( )(Address)_7)_USA", "SplitAlign(/)(Split( )(Species)_1)_RESTUANS", "SplitAlign(.)(Split( )(Street)_3)_AVE", "SplitAlign(.)(Split( )(Street)_3)_ST", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_4)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_AVE", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_5)_Chicago", "SplitAlign(,)(Split( )(AddressNumberAndStreet)_6)_Chicago", "ExtractNumber((\\d{2}))(Split(-)(Date)_1)_0", "ExtractNumber((\\d{2}))(Split(-)(Date)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Address)_0)_0", "ExtractNumber((\\d{4}))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+))(Lowercase()(Address)_Address)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d+,))(Lowercase()(Address)_Address)_0", "ExtractNumber((\\d{5},))(Lowercase()(Address)_Address)_0", "ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0", "ExtractWord([Avenue, Brandon, Cicero, Cottage, Court, Doty, East, Garfield, IL, Mackinaw, Midway, Milwaukee, North, Roosevelt, South, Stony, Streeter, Terminal, Torrence, Vincennes, Wallace, West, of, st, th])(Split( )(Address)_1)_0", "ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "ExtractWord([O, USA])(Split(')(Address)_0)_0", "ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0", "OneHot()(Split(-)(Date)_0)_2007", "OneHot()(Split(-)(Date)_0)_2009", "OneHot()(Split(-)(Date)_0)_2011", "OneHot()(Split(-)(Date)_0)_2013", "OneHot()(Split(-)(Date)_1)_06", "OneHot()(Split(-)(Date)_1)_07", "OneHot()(Split(-)(Date)_1)_08", "OneHot()(Split(-)(Date)_1)_09", "OneHot()(Split(-)(Date)_1)_10", "OneHot()(Split( )(Address)_4)_IL", "OneHot()(Split( )(Street)_1)_E", "OneHot()(Split( )(Street)_1)_N", "OneHot()(Split( )(Street)_1)_S", "OneHot()(Split( )(Street)_1)_W", "WordToNumber()(Split( )(Address)_0)_Split( )(Address)_0", "ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6", "ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7", "ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3", "ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6", "Split(,)(Split( )(Split(')(Address)_0)_4)_0", "Split(,)(Split( )(Split(')(Address)_0)_5)_0", "SplitAlign(,)(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_USA", "SplitAlign(.)(ModeImputation()(Split( )(Street)_3)_Split( )(Street)_3)_AVE", "SplitAlign(,)(ModeImputation()(Split( )(AddressNumberAndStreet)_6)_Split( )(AddressNumberAndStreet)_6)_IL", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d{4}))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{4}))(Split( )(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d+))(Split(, )(Lowercase()(Address)_Address)_2)_0", "ExtractNumber((\\d{4}))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d{5},))(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractWord([Alsip, Bensenville, Chicago, IL, O, Riverdale, Rosemont])(Split( )(Split(,)(Address)_1)_1)_0", "ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(Split( )(Split(')(Address)_0)_7)_0", "ExtractWord([o, usa])(Split(')(Lowercase()(Address)_Address)_0)_0", "ExtractWord([Ashland, Drive, IL, USA, rd])(ModeImputation()(Split( )(Address)_7)_Split( )(Address)_7)_0", "Numerical()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Avenue", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Road", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_Street", "OneHot()(ExtractWord([Avenue, Chicago, Drive, Ohare, Place, Road, Street, Terminal, West])(Split(,)(Address)_0)_0)_West", "OneHot()(ExtractWord([N, S, ST, W])(ExtractWord([AVE, N, S, ST, W])(Street)_0)_0)_S", "WordToNumber()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "WordToNumber()(Split( )(Lowercase()(Address)_Address)_0)_Split( )(Lowercase()(Address)_Address)_0", "ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3", "ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2", "ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4", "ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5", "ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6", "ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7", "ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0", "ModeImputation()(ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0)_ExtractWord([Ashland, Drive, IL, USA, rd])(Split( )(Address)_7)_0", "Split(,)(ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4)_0", "Split(,)(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_0", "SplitAlign( )(ModeImputation()(Split(,)(Split(')(Address)_0)_3)_Split(,)(Split(')(Address)_0)_3)_USA", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_4)_Split( )(Split(')(Address)_0)_4)_Chicago", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_IL", "SplitAlign(,)(ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7)_USA", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_0", "ExtractNumber((\\d{5}))(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber((\\d+))(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber((\\d+))(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(,)(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+,))(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split( )(Split(')(Lowercase()(Address)_Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d+))(Split(, )(Split(')(Lowercase()(Address)_Address)_0)_2)_0", "ExtractNumber((\\d{5}))(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d+))(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d+))(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(Lowercase()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Split( )(Lowercase()(Address)_Address)_6)_Split( )(Lowercase()(Address)_Address)_6)_0", "ExtractNumber((\\d+,))(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d+,))(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5},))(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(Lowercase()(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(ModeImputation()(Split(,)(Split(')(Address)_0)_2)_Split(,)(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+,))(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5},))(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split( )(Split(')(Address)_0)_6)_Split( )(Split(')(Address)_0)_6)_0", "ExtractNumber((\\d{5}))(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber(:(?:\\d*[.,]\\d+)|(?:\\d+[.,]?))(?:[Ee][+-)(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractNumber((\\d+))(ModeImputation()(Split(, )(Split(')(Address)_0)_2)_Split(, )(Split(')(Address)_0)_2)_0", "ExtractWord([Chicago, IL, King, USA])(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_0", "ExtractWord([Ashland, Drive, USA, rd])(ModeImputation()(Split( )(Split(')(Address)_0)_7)_Split( )(Split(')(Address)_0)_7)_0", "Numerical()(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_Split( )(Split(,)(Split(')(Address)_0)_2)_2", "Numerical()(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_Split( )(Split(, )(Split(')(Address)_0)_2)_1", "Numerical()(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2", "Numerical()(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1", "Numerical()(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "Numerical()(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "OneHot()(ModeImputation()(Split( )(Split(,)(Address)_0)_3)_Split( )(Split(,)(Address)_0)_3)_Avenue", "OneHot()(ModeImputation()(Split( )(Split(')(Address)_0)_5)_Split( )(Split(')(Address)_0)_5)_IL", "OneHot()(ModeImputation()(ExtractWord([Alsip, Avenue, Chicago, Drive, IL, International, Luther, MDW, Rosemont])(Split( )(Address)_4)_0)_ExtractWord([Alsip, Avenue, Chicago, Drive, IL, International, Luther, MDW, Rosemont])(Split( )(Address)_4)_0)_Chicago", "OneHot()(ModeImputation()(ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_ExtractWord([Airport, Chicago, IL, King, USA])(Split( )(Address)_5)_0)_IL", "WordToNumber()(Split( )(Split(,)(Split(')(Address)_0)_2)_2)_Split( )(Split(,)(Split(')(Address)_0)_2)_2", "WordToNumber()(Split(,)(Split( )(Split(')(Address)_0)_6)_0)_Split(,)(Split( )(Split(')(Address)_0)_6)_0", "WordToNumber()(Split( )(Split(, )(Split(')(Address)_0)_2)_1)_Split( )(Split(, )(Split(')(Address)_0)_2)_1", "WordToNumber()(Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2)_Split( )(Split(,)(Lowercase()(Address)_Address)_2)_2", "WordToNumber()(Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0)_Split(,)(Split( )(Lowercase()(Address)_Address)_6)_0", "WordToNumber()(Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1)_Split( )(Split(, )(Lowercase()(Address)_Address)_2)_1", "WordToNumber()(Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0)_Split(,)(Lowercase()(Split( )(Address)_6)_Split( )(Address)_6)_0", "WordToNumber()(Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0)_Split(,)(ModeImputation()(Split( )(Address)_6)_Split( )(Address)_6)_0", "WordToNumber()(Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2)_Lowercase()(Split( )(Split(,)(Address)_2)_2)_Split( )(Split(,)(Address)_2)_2", "WordToNumber()(Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0)_Lowercase()(Split(,)(Split( )(Address)_6)_0)_Split(,)(Split( )(Address)_6)_0", "WordToNumber()(Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1)_Lowercase()(Split( )(Split(, )(Address)_2)_1)_Split( )(Split(, )(Address)_2)_1", "ModeImputation()(ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0)_ExtractWord([Chicago, IL, King, USA])(Split( )(Split(')(Address)_0)_5)_0"]}]}